<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="bme680_8c" kind="file" language="C++">
    <compoundname>bme680.c</compoundname>
    <includes refid="bme680_8h" local="yes">bme680.h</includes>
    <incdepgraph>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c</label>
        <link refid="bme680_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>bme680.h</label>
        <link refid="bme680_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>bme680_defs.h</label>
        <link refid="bme680__defs_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="bme680_8c_1ab8322c91a5c8fa1ef4644695923c641d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t get_calib_data</definition>
        <argsstring>(struct bme680_dev *dev)</argsstring>
        <name>get_calib_data</name>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to read the calibrated data from the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is used to retrieve the calibration data from the image registers of the sensor.</para>
<para><simplesect kind="note"><para>Registers 89h to A1h for calibration data 1 to 24 from bit 0 to 7 </para>
</simplesect>
<simplesect kind="note"><para>Registers E1h to F0h for calibration data 25 to 40 from bit 0 to 7 </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="728" column="15" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="728" bodyend="802" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="67" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1aadb617afe7c21b652a32c316fba66b5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t set_gas_config</definition>
        <argsstring>(struct bme680_dev *dev)</argsstring>
        <name>set_gas_config</name>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to set the gas configuration of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="807" column="15" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="807" bodyend="832" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="77" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a1305f9a63464724f6c95a79ef71dd5a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t get_gas_config</definition>
        <argsstring>(struct bme680_dev *dev)</argsstring>
        <name>get_gas_config</name>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to get the gas configuration of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>heatr_temp and heatr_dur values are currently register data and not the actual values set</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status. </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>heatr_temp and heatr_dur values are currently register data and not the actual values set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="839" column="15" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="839" bodyend="869" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="89" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1aa4508da37330f16b676b81aa6df4ac7e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t calc_heater_dur</definition>
        <argsstring>(uint16_t dur)</argsstring>
        <name>calc_heater_dur</name>
        <param>
          <type>uint16_t</type>
          <declname>dur</declname>
        </param>
        <briefdescription>
<para>This internal API is used to calculate the Heat duration value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dur</parametername>
</parameternamelist>
<parameterdescription>
<para>:Value of the duration to be shared.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t threshold duration after calculation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="1188" column="16" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="1188" bodyend="1204" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="98" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a00b82ff86883a137b98cc32946d5ee7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>static int16_t calc_temperature</definition>
        <argsstring>(uint32_t temp_adc, struct bme680_dev *dev)</argsstring>
        <name>calc_temperature</name>
        <param>
          <type>uint32_t</type>
          <declname>temp_adc</declname>
        </param>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to calculate the temperature value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">temp_adc</parametername>
</parameternamelist>
<parameterdescription>
<para>:Contains the temperature ADC value .</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t calculated temperature. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="876" column="16" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="876" bodyend="891" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="110" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a446d5e1b3bd406cd1aa45f9253bae797" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t calc_pressure</definition>
        <argsstring>(uint32_t pres_adc, const struct bme680_dev *dev)</argsstring>
        <name>calc_pressure</name>
        <param>
          <type>uint32_t</type>
          <declname>pres_adc</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to calculate the pressure value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pres_adc</parametername>
</parameternamelist>
<parameterdescription>
<para>:Contains the pressure ADC value .</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t calculated pressure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="896" column="17" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="896" bodyend="932" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="120" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1abb1620ac62517f7ce02d9418c8e8a795" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t calc_humidity</definition>
        <argsstring>(uint16_t hum_adc, const struct bme680_dev *dev)</argsstring>
        <name>calc_humidity</name>
        <param>
          <type>uint16_t</type>
          <declname>hum_adc</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to calculate the humidity value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hum_adc</parametername>
</parameternamelist>
<parameterdescription>
<para>:Contains the humidity ADC value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t calculated humidity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="937" column="17" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="937" bodyend="968" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="130" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a69159f8c41be18f2ff1643d734f0b133" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t calc_gas_resistance</definition>
        <argsstring>(uint16_t gas_res_adc, uint8_t gas_range, const struct bme680_dev *dev)</argsstring>
        <name>calc_gas_resistance</name>
        <param>
          <type>uint16_t</type>
          <declname>gas_res_adc</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>gas_range</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to calculate the Gas Resistance value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gas_res_adc</parametername>
</parameternamelist>
<parameterdescription>
<para>:Contains the Gas Resistance ADC value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">gas_range</parametername>
</parameternamelist>
<parameterdescription>
<para>:Contains the range of gas values.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint32_t calculated gas resistance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Look up table 1 for the possible gas range values</para>
<para>Look up table 2 for the possible gas range values</para>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="973" column="17" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="973" bodyend="997" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="141" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1afb0d4e9c93c9847e57c0e311a45532a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t calc_heater_res</definition>
        <argsstring>(uint16_t temp, const struct bme680_dev *dev)</argsstring>
        <name>calc_heater_res</name>
        <param>
          <type>uint16_t</type>
          <declname>temp</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to calculate the Heat Resistance value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">temp</parametername>
</parameternamelist>
<parameterdescription>
<para>: Contains the target temperature value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t calculated heater resistance. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="1002" column="16" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="1002" bodyend="1024" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="151" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a1218d033abf33a82f27b86836fc9feb3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t read_field_data</definition>
        <argsstring>(struct bme680_field_data *data, struct bme680_dev *dev)</argsstring>
        <name>read_field_data</name>
        <param>
          <type>struct <ref refid="structbme680__field__data" kindref="compound">bme680_field_data</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to calculate the field data of sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance to hold the data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int8_t result of the field data from sensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="1209" column="15" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="1209" bodyend="1260" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="220" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a25e8a0a8d3226f33a5d8f57ffb2fb3d2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t set_mem_page</definition>
        <argsstring>(uint8_t reg_addr, struct bme680_dev *dev)</argsstring>
        <name>set_mem_page</name>
        <param>
          <type>uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to set the memory page based on register address. </para>
        </briefdescription>
        <detaileddescription>
<para>The value of memory page <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para>
</entry><entry thead="yes"><para>Description  </para>
</entry></row>
<row>
<entry thead="no"><para>0 </para>
</entry><entry thead="no"><para>BME680_PAGE0_SPI  </para>
</entry></row>
<row>
<entry thead="no"><para>1 </para>
</entry><entry thead="no"><para>BME680_PAGE1_SPI  </para>
</entry></row>
</table>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>:Contains the register address array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="1265" column="15" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="1265" bodyend="1299" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="238" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1aacb28f84d81ec8f79c74646cc970f2dd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t get_mem_page</definition>
        <argsstring>(struct bme680_dev *dev)</argsstring>
        <name>get_mem_page</name>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to get the memory page based on register address. </para>
        </briefdescription>
        <detaileddescription>
<para>The value of memory page <table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para>
</entry><entry thead="yes"><para>Description  </para>
</entry></row>
<row>
<entry thead="no"><para>0 </para>
</entry><entry thead="no"><para>BME680_PAGE0_SPI  </para>
</entry></row>
<row>
<entry thead="no"><para>1 </para>
</entry><entry thead="no"><para>BME680_PAGE1_SPI  </para>
</entry></row>
</table>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="1304" column="15" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="1304" bodyend="1320" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="255" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1a3d515cc04487284d5543845f599c58b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t null_ptr_check</definition>
        <argsstring>(const struct bme680_dev *dev)</argsstring>
        <name>null_ptr_check</name>
        <param>
          <type>const struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to validate the device pointer for null conditions. </para>
        </briefdescription>
        <detaileddescription>
<para>This internal API is used to validate the device structure pointer for null conditions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="1354" column="15" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="1354" bodyend="1367" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="266" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="bme680_8c_1abba830af9f63c4c251701e3001711527" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>static int8_t boundary_check</definition>
        <argsstring>(uint8_t *value, uint8_t min, uint8_t max, struct bme680_dev *dev)</argsstring>
        <name>boundary_check</name>
        <param>
          <type>uint8_t *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>max</declname>
        </param>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This internal API is used to check the boundary conditions. </para>
        </briefdescription>
        <detaileddescription>
<para>This internal API is used to validate the boundary conditions.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>:pointer to the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min</parametername>
</parameternamelist>
<parameterdescription>
<para>:minimum value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max</parametername>
</parameternamelist>
<parameterdescription>
<para>:maximum value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>:Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="1326" column="15" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="1326" bodyend="1348" declfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" declline="280" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1gaee75ae524b7ca8f4a9b6dbb7f640c2e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t bme680_init</definition>
        <argsstring>(struct bme680_dev *dev)</argsstring>
        <name>bme680_init</name>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API is the entry point. It reads the chip-id and calibration data from the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para>CPP guard</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="287" column="8" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="287" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t bme680_get_regs</definition>
        <argsstring>(uint8_t reg_addr, uint8_t *reg_data, uint16_t len, struct bme680_dev *dev)</argsstring>
        <name>bme680_get_regs</name>
        <param>
          <type>uint8_t</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>reg_data</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API reads the data from the given register address of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>: Register address from where the data to be read </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">reg_data</parametername>
</parameternamelist>
<parameterdescription>
<para>: Pointer to data buffer to store the read data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>: No of bytes of data to be read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="315" column="8" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="315" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1ga5d1bad74f7ac28e75aca9d7de66fd2b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t bme680_set_regs</definition>
        <argsstring>(const uint8_t *reg_addr, const uint8_t *reg_data, uint8_t len, struct bme680_dev *dev)</argsstring>
        <name>bme680_set_regs</name>
        <param>
          <type>const uint8_t *</type>
          <declname>reg_addr</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>reg_data</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API writes the given data to the register address of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">reg_addr</parametername>
</parameternamelist>
<parameterdescription>
<para>: Register address from where the data to be written. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">reg_data</parametername>
</parameternamelist>
<parameterdescription>
<para>: Pointer to data buffer which is to be written in the sensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>: No of bytes of data to write.. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="340" column="8" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="340" bodyend="374"/>
        <references refid="group___b_m_e680_1ga9be3bfa321b5d7b421ae2b8900d49eff" compoundref="bme680__defs_8h" startline="225">BME680_TMP_BUFFER_LENGTH</references>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1ga7f0f1a4378bc6cd0a34acf62509cdec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t bme680_soft_reset</definition>
        <argsstring>(struct bme680_dev *dev)</argsstring>
        <name>bme680_soft_reset</name>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API performs the soft reset of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="379" column="8" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="379" bodyend="407"/>
        <references refid="group___b_m_e680_1ga69bae1e3eba277068c1055e3028bbf41" compoundref="bme680__defs_8h" startline="178">BME680_SOFT_RESET_ADDR</references>
        <references refid="group___b_m_e680_1ga6da379a1060ef5079d34ba88191c3488" compoundref="bme680__defs_8h" startline="129">BME680_SOFT_RESET_CMD</references>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1ga2fea1365b4fa1d33eef434769b16e811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t bme680_set_sensor_settings</definition>
        <argsstring>(uint16_t desired_settings, struct bme680_dev *dev)</argsstring>
        <name>bme680_set_sensor_settings</name>
        <param>
          <type>uint16_t</type>
          <declname>desired_settings</declname>
        </param>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API is used to set the oversampling, filter and T,P,H, gas selection settings in the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desired_settings</parametername>
</parameternamelist>
<parameterdescription>
<para>: Variable used to select the settings which are to be set in the sensor. <verbatim>Macros                    |  Functionality
</verbatim> ------------------------------<mdash/>|-------------------------------------------<mdash/> BME680_OST_SEL | To set temperature oversampling. BME680_OSP_SEL | To set pressure oversampling. BME680_OSH_SEL | To set humidity oversampling. BME680_GAS_MEAS_SEL | To set gas measurement setting. BME680_FILTER_SEL | To set filter setting. BME680_HCNTRL_SEL | To set humidity control setting. BME680_RUN_GAS_SEL | To set run gas setting. BME680_NBCONV_SEL | To set NB conversion setting. BME680_GAS_SENSOR_SEL | To set all gas sensor related settings</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>: Below are the macros to be used by the user for selecting the desired settings. User can do OR operation of these macros for configuring multiple settings.</para>
</simplesect>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="413" column="8" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="413" bodyend="531"/>
        <references refid="group___b_m_e680_1ga8bbf94a63af9425d361db02bf8855ba7" compoundref="bme680__defs_8h" startline="226">BME680_REG_BUFFER_LENGTH</references>
        <references refid="structbme680__dev_1a5d7bfe9503c1c86a8a5d245129749b07" compoundref="bme680__defs_8h" startline="526">bme680_dev::power_mode</references>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1ga7826b058b8eddcf05ccbb117fd9d41b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t bme680_get_sensor_settings</definition>
        <argsstring>(uint16_t desired_settings, struct bme680_dev *dev)</argsstring>
        <name>bme680_get_sensor_settings</name>
        <param>
          <type>uint16_t</type>
          <declname>desired_settings</declname>
        </param>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API is used to get the oversampling, filter and T,P,H, gas selection settings in the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">desired_settings</parametername>
</parameternamelist>
<parameterdescription>
<para>: Variable used to select the settings which are to be get from the sensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="537" column="8" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="537" bodyend="584"/>
        <references refid="group___b_m_e680_1ga995aae4506cba06c735bb2ff37fbca49" compoundref="bme680__defs_8h" startline="163">BME680_CONF_HEAT_CTRL_ADDR</references>
        <references refid="group___b_m_e680_1ga8bbf94a63af9425d361db02bf8855ba7" compoundref="bme680__defs_8h" startline="226">BME680_REG_BUFFER_LENGTH</references>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1ga5ca765226e758e71c862553c7cc0b371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t bme680_set_sensor_mode</definition>
        <argsstring>(struct bme680_dev *dev)</argsstring>
        <name>bme680_set_sensor_mode</name>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API is used to set the power mode of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>: Pass the value to <ref refid="structbme680__dev_1a5d7bfe9503c1c86a8a5d245129749b07" kindref="member">bme680_dev.power_mode</ref> structure variable.</para>
</simplesect>
<table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para>
</entry><entry thead="yes"><para>mode  </para>
</entry></row>
<row>
<entry thead="no"><para>0x00 </para>
</entry><entry thead="no"><para>BME680_SLEEP_MODE  </para>
</entry></row>
<row>
<entry thead="no"><para>0x01 </para>
</entry><entry thead="no"><para>BME680_FORCED_MODE  </para>
</entry></row>
</table>
</para>
<para><itemizedlist>
<listitem><para><simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="589" column="8" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="589" bodyend="623"/>
        <references refid="group___b_m_e680_1ga91607f3be92722408129f7dc4d9da94e" compoundref="bme680__defs_8h" startline="167">BME680_CONF_T_P_MODE_ADDR</references>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1ga4e50492a1f4747868f7e9a826492f1e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t bme680_get_sensor_mode</definition>
        <argsstring>(struct bme680_dev *dev)</argsstring>
        <name>bme680_get_sensor_mode</name>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API is used to get the power mode of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>: <ref refid="structbme680__dev_1a5d7bfe9503c1c86a8a5d245129749b07" kindref="member">bme680_dev.power_mode</ref> structure variable hold the power mode.</para>
</simplesect>
<table rows="3" cols="2"><row>
<entry thead="yes"><para>value </para>
</entry><entry thead="yes"><para>mode  </para>
</entry></row>
<row>
<entry thead="no"><para>0x00 </para>
</entry><entry thead="no"><para>BME680_SLEEP_MODE  </para>
</entry></row>
<row>
<entry thead="no"><para>0x01 </para>
</entry><entry thead="no"><para>BME680_FORCED_MODE  </para>
</entry></row>
</table>
</para>
<para><simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="628" column="8" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="628" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1ga192f772bc9cb619e5855e93d6ebd6128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bme680_set_profile_dur</definition>
        <argsstring>(uint16_t duration, struct bme680_dev *dev)</argsstring>
        <name>bme680_set_profile_dur</name>
        <param>
          <type>uint16_t</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API is used to set the profile duration of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">duration</parametername>
</parameternamelist>
<parameterdescription>
<para>: Duration of the measurement in ms.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nothing </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="647" column="6" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="647" bodyend="667"/>
        <references refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" compoundref="bme680__defs_8h" startline="522">bme680_dev::tph_sett</references>
        <references refid="structbme680__tph__sett_1a83ac2b084c3e4162a70482ddf3f73a13" compoundref="bme680__defs_8h" startline="481">bme680_tph_sett::os_temp</references>
        <references refid="structbme680__tph__sett_1ad4d1e27669b8d9bbfce53c8eae258b27" compoundref="bme680__defs_8h" startline="483">bme680_tph_sett::os_pres</references>
        <references refid="structbme680__tph__sett_1aa2b315a5e149e613b69a235f1cd799f4" compoundref="bme680__defs_8h" startline="479">bme680_tph_sett::os_hum</references>
        <references refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" compoundref="bme680__defs_8h" startline="84">UINT32_C</references>
        <references refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" compoundref="bme680__defs_8h" startline="524">bme680_dev::gas_sett</references>
        <references refid="structbme680__gas__sett_1ab412f4a6feca7ae5340dafc536763cb3" compoundref="bme680__defs_8h" startline="502">bme680_gas_sett::heatr_dur</references>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1gae49a6f126c136fb16a8557a67e39d07c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bme680_get_profile_dur</definition>
        <argsstring>(uint16_t *duration, const struct bme680_dev *dev)</argsstring>
        <name>bme680_get_profile_dur</name>
        <param>
          <type>uint16_t *</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>const struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API is used to get the profile duration of the sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">duration</parametername>
</parameternamelist>
<parameterdescription>
<para>: Duration of the measurement in ms.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nothing </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="672" column="6" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="672" bodyend="698"/>
        <references refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" compoundref="bme680__defs_8h" startline="522">bme680_dev::tph_sett</references>
        <references refid="structbme680__tph__sett_1a83ac2b084c3e4162a70482ddf3f73a13" compoundref="bme680__defs_8h" startline="481">bme680_tph_sett::os_temp</references>
        <references refid="structbme680__tph__sett_1ad4d1e27669b8d9bbfce53c8eae258b27" compoundref="bme680__defs_8h" startline="483">bme680_tph_sett::os_pres</references>
        <references refid="structbme680__tph__sett_1aa2b315a5e149e613b69a235f1cd799f4" compoundref="bme680__defs_8h" startline="479">bme680_tph_sett::os_hum</references>
        <references refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" compoundref="bme680__defs_8h" startline="84">UINT32_C</references>
        <references refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" compoundref="bme680__defs_8h" startline="524">bme680_dev::gas_sett</references>
        <references refid="structbme680__gas__sett_1a89128634f22f0c2309ab03346aa2b7ab" compoundref="bme680__defs_8h" startline="498">bme680_gas_sett::run_gas</references>
        <references refid="structbme680__gas__sett_1ab412f4a6feca7ae5340dafc536763cb3" compoundref="bme680__defs_8h" startline="502">bme680_gas_sett::heatr_dur</references>
      </memberdef>
      <memberdef kind="function" id="group___b_m_e680_1ga1025301e420e1e21911044bebb62f940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int8_t</type>
        <definition>int8_t bme680_get_sensor_data</definition>
        <argsstring>(struct bme680_field_data *data, struct bme680_dev *dev)</argsstring>
        <name>bme680_get_sensor_data</name>
        <param>
          <type>struct <ref refid="structbme680__field__data" kindref="compound">bme680_field_data</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>struct <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>This API reads the pressure, temperature and humidity and gas data from the sensor, compensates the data and store it in the bme680_data structure instance passed by the user. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Structure instance to hold the data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dev</parametername>
</parameternamelist>
<parameterdescription>
<para>: Structure instance of <ref refid="structbme680__dev" kindref="compound">bme680_dev</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of API execution status </para>
</simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>zero</parametername>
</parameternamelist>
<parameterdescription>
<para>-&gt; Success / +ve value -&gt; Warning / -ve value -&gt; Error </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" line="705" column="8" bodyfile="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c" bodystart="705" bodyend="723"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Sensor driver for BME680 sensor. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="50"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bme680_8h" kindref="compound">bme680.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>get_calib_data(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>set_gas_config(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>get_gas_config(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>calc_heater_dur(uint16_t<sp/>dur);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BME680_FLOAT_POINT_COMPENSATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int16_t<sp/>calc_temperature(uint32_t<sp/>temp_adc,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>calc_pressure(uint32_t<sp/>pres_adc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>calc_humidity(uint16_t<sp/>hum_adc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>calc_gas_resistance(uint16_t<sp/>gas_res_adc,<sp/>uint8_t<sp/>gas_range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>calc_heater_res(uint16_t<sp/>temp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_temperature(uint32_t<sp/>temp_adc,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_pressure(uint32_t<sp/>pres_adc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_humidity(uint16_t<sp/>hum_adc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_gas_resistance(uint16_t<sp/>gas_res_adc,<sp/>uint8_t<sp/>gas_range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_heater_res(uint16_t<sp/>temp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>read_field_data(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__field__data" kindref="compound">bme680_field_data</ref><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>set_mem_page(uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>get_mem_page(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>null_ptr_check(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>boundary_check(uint8_t<sp/>*value,<sp/>uint8_t<sp/>min,<sp/>uint8_t<sp/>max,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>Global<sp/>Function<sp/>Definitions<sp/>*******************************/</highlight></codeline>
<codeline lineno="287" refid="group___b_m_e680_1gaee75ae524b7ca8f4a9b6dbb7f640c2e4" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="group___b_m_e680_1gaee75ae524b7ca8f4a9b6dbb7f640c2e4" kindref="member">bme680_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Soft<sp/>reset<sp/>to<sp/>restore<sp/>it<sp/>to<sp/>default<sp/>values*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga7f0f1a4378bc6cd0a34acf62509cdec7" kindref="member">bme680_soft_reset</ref>(dev);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(<ref refid="group___b_m_e680_1gaa24d214515e9c3606dcefb874888c055" kindref="member">BME680_CHIP_ID_ADDR</ref>,<sp/>&amp;dev-&gt;<ref refid="structbme680__dev_1a88e300db221e7a0382f2a4c289b9557d" kindref="member">chip_id</ref>,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a88e300db221e7a0382f2a4c289b9557d" kindref="member">chip_id</ref><sp/>==<sp/><ref refid="group___b_m_e680_1ga762d33b22cceaa1f90dc2044ace463ee" kindref="member">BME680_CHIP_ID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>Calibration<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>get_calib_data(dev);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaeaccfbff7ccd3150102f427e7c24bf36" kindref="member">BME680_E_DEV_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(uint8_t<sp/>reg_addr,<sp/>uint8_t<sp/>*reg_data,<sp/>uint16_t<sp/>len,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a704c987d019d06ba6641bb769545aae6" kindref="member">intf</ref><sp/>==<sp/><ref refid="group___b_m_e680_1gga2232c03d0c1282e976af41b39e1b87d6a504bd691a4b57b0c914cc8c77bd696c3" kindref="member">BME680_SPI_INTF</ref>)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>memory<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>set_mem_page(reg_addr,<sp/>dev);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_addr<sp/>=<sp/>reg_addr<sp/>|<sp/><ref refid="group___b_m_e680_1ga82221087b2a61c32876783ffaf23ce02" kindref="member">BME680_SPI_RD_MSK</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a75f4f26417a14eeb41a677a1c3770a4d" kindref="member">com_rslt</ref><sp/>=<sp/>dev-&gt;<ref refid="structbme680__dev_1aa8215525e98304c1037bef2f1407f8ee" kindref="member">read</ref>(dev-&gt;<ref refid="structbme680__dev_1a360603720ae8b2c0e4931dd0f648c504" kindref="member">dev_id</ref>,<sp/>reg_addr,<sp/>reg_data,<sp/>len);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a75f4f26417a14eeb41a677a1c3770a4d" kindref="member">com_rslt</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gafa2490175882e55b410f4c383dd89b81" kindref="member">BME680_E_COM_FAIL</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="group___b_m_e680_1ga5d1bad74f7ac28e75aca9d7de66fd2b4" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="group___b_m_e680_1ga5d1bad74f7ac28e75aca9d7de66fd2b4" kindref="member">bme680_set_regs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*reg_addr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*reg_data,<sp/>uint8_t<sp/>len,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Length<sp/>of<sp/>the<sp/>temporary<sp/>buffer<sp/>is<sp/>2*(length<sp/>of<sp/>register)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tmp_buff[<ref refid="group___b_m_e680_1ga9be3bfa321b5d7b421ae2b8900d49eff" kindref="member">BME680_TMP_BUFFER_LENGTH</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>index;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((len<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(len<sp/>&lt;<sp/><ref refid="group___b_m_e680_1ga9be3bfa321b5d7b421ae2b8900d49eff" kindref="member">BME680_TMP_BUFFER_LENGTH</ref><sp/>/<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Interleave<sp/>the<sp/>2<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>len;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a704c987d019d06ba6641bb769545aae6" kindref="member">intf</ref><sp/>==<sp/><ref refid="group___b_m_e680_1gga2232c03d0c1282e976af41b39e1b87d6a504bd691a4b57b0c914cc8c77bd696c3" kindref="member">BME680_SPI_INTF</ref>)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>memory<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>set_mem_page(reg_addr[index],<sp/>dev);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buff[(2<sp/>*<sp/>index)]<sp/>=<sp/>reg_addr[index]<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga22e8383fee778e9ae7a9e91405438f29" kindref="member">BME680_SPI_WR_MSK</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buff[(2<sp/>*<sp/>index)]<sp/>=<sp/>reg_addr[index];</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_buff[(2<sp/>*<sp/>index)<sp/>+<sp/>1]<sp/>=<sp/>reg_data[index];</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>the<sp/>interleaved<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a75f4f26417a14eeb41a677a1c3770a4d" kindref="member">com_rslt</ref><sp/>=<sp/>dev-&gt;<ref refid="structbme680__dev_1a796d8ab19af12146a56567358ab6089c" kindref="member">write</ref>(dev-&gt;<ref refid="structbme680__dev_1a360603720ae8b2c0e4931dd0f648c504" kindref="member">dev_id</ref>,<sp/>tmp_buff[0],<sp/>&amp;tmp_buff[1],<sp/>(2<sp/>*<sp/>len)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a75f4f26417a14eeb41a677a1c3770a4d" kindref="member">com_rslt</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gafa2490175882e55b410f4c383dd89b81" kindref="member">BME680_E_COM_FAIL</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga1e32ed028e1547f9b5b0d699252895e2" kindref="member">BME680_E_INVALID_LENGTH</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="group___b_m_e680_1ga7f0f1a4378bc6cd0a34acf62509cdec7" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="group___b_m_e680_1ga7f0f1a4378bc6cd0a34acf62509cdec7" kindref="member">bme680_soft_reset</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_addr<sp/>=<sp/><ref refid="group___b_m_e680_1ga69bae1e3eba277068c1055e3028bbf41" kindref="member">BME680_SOFT_RESET_ADDR</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0xb6<sp/>is<sp/>the<sp/>soft<sp/>reset<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>soft_rst_cmd<sp/>=<sp/><ref refid="group___b_m_e680_1ga6da379a1060ef5079d34ba88191c3488" kindref="member">BME680_SOFT_RESET_CMD</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a704c987d019d06ba6641bb769545aae6" kindref="member">intf</ref><sp/>==<sp/><ref refid="group___b_m_e680_1gga2232c03d0c1282e976af41b39e1b87d6a504bd691a4b57b0c914cc8c77bd696c3" kindref="member">BME680_SPI_INTF</ref>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>get_mem_page(dev);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reset<sp/>the<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga5d1bad74f7ac28e75aca9d7de66fd2b4" kindref="member">bme680_set_regs</ref>(&amp;reg_addr,<sp/>&amp;soft_rst_cmd,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Wait<sp/>for<sp/>5ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1acfd9f63e6ac639204678889c004d9a27" kindref="member">delay_ms</ref>(<ref refid="group___b_m_e680_1ga6409d476475762c095a746a1b785bdd6" kindref="member">BME680_RESET_PERIOD</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>After<sp/>reset<sp/>get<sp/>the<sp/>memory<sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a704c987d019d06ba6641bb769545aae6" kindref="member">intf</ref><sp/>==<sp/><ref refid="group___b_m_e680_1gga2232c03d0c1282e976af41b39e1b87d6a504bd691a4b57b0c914cc8c77bd696c3" kindref="member">BME680_SPI_INTF</ref>)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>get_mem_page(dev);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="413" refid="group___b_m_e680_1ga2fea1365b4fa1d33eef434769b16e811" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="group___b_m_e680_1ga2fea1365b4fa1d33eef434769b16e811" kindref="member">bme680_set_sensor_settings</ref>(uint16_t<sp/>desired_settings,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_addr;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_array[<ref refid="group___b_m_e680_1ga8bbf94a63af9425d361db02bf8855ba7" kindref="member">BME680_REG_BUFFER_LENGTH</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_array[<ref refid="group___b_m_e680_1ga8bbf94a63af9425d361db02bf8855ba7" kindref="member">BME680_REG_BUFFER_LENGTH</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>intended_power_mode<sp/>=<sp/>dev-&gt;<ref refid="structbme680__dev_1a5d7bfe9503c1c86a8a5d245129749b07" kindref="member">power_mode</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>intended<sp/>power<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga6ba77fc5b103421f67a9e328720af15e" kindref="member">BME680_GAS_MEAS_SEL</ref>)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>set_gas_config(dev);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a5d7bfe9503c1c86a8a5d245129749b07" kindref="member">power_mode</ref><sp/>=<sp/><ref refid="group___b_m_e680_1ga9fc5e8034aa79028c0286ea4c974ee69" kindref="member">BME680_SLEEP_MODE</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga5ca765226e758e71c862553c7cc0b371" kindref="member">bme680_set_sensor_mode</ref>(dev);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Selecting<sp/>the<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga56ea9531725679aaad25b574ac3ab0ce" kindref="member">BME680_FILTER_SEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>boundary_check(&amp;dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1aa69d890d38e8a1abafc8697d1760bb04" kindref="member">filter</ref>,<sp/><ref refid="group___b_m_e680_1ga5edcb9fcb77440f52d2b2865a89b5475" kindref="member">BME680_FILTER_SIZE_0</ref>,<sp/><ref refid="group___b_m_e680_1ga5b5941f3e4e6344b6e2b3e28e6356074" kindref="member">BME680_FILTER_SIZE_127</ref>,<sp/>dev);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_addr<sp/>=<sp/><ref refid="group___b_m_e680_1ga76aff0494ce12a91e5e4647d898a3303" kindref="member">BME680_CONF_ODR_FILT_ADDR</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(reg_addr,<sp/>&amp;data,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga56ea9531725679aaad25b574ac3ab0ce" kindref="member">BME680_FILTER_SEL</ref>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="group___b_m_e680_1gaa2dfae23c0c4a846bde4fdf3780c390e" kindref="member">BME680_SET_BITS</ref>(data,<sp/>BME680_FILTER,<sp/>dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1aa69d890d38e8a1abafc8697d1760bb04" kindref="member">filter</ref>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_array[count]<sp/>=<sp/>reg_addr;<sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_array[count]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Selecting<sp/>heater<sp/>control<sp/>for<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga3db4f67603ca3b538ab71a49d3b08c34" kindref="member">BME680_HCNTRL_SEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>boundary_check(&amp;dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a94f9f699dafdfd8ac3f6e93b8e22c4a9" kindref="member">heatr_ctrl</ref>,<sp/><ref refid="group___b_m_e680_1ga9e973dfcc1a103110cc44077f3ed86c1" kindref="member">BME680_ENABLE_HEATER</ref>,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_m_e680_1ga78ae55eb1a642204835cdc9f5fd48dd7" kindref="member">BME680_DISABLE_HEATER</ref>,<sp/>dev);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_addr<sp/>=<sp/><ref refid="group___b_m_e680_1ga995aae4506cba06c735bb2ff37fbca49" kindref="member">BME680_CONF_HEAT_CTRL_ADDR</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(reg_addr,<sp/>&amp;data,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="group___b_m_e680_1ga5e3fed11d9e1cb98d8c05bc5f418d4e8" kindref="member">BME680_SET_BITS_POS_0</ref>(data,<sp/>BME680_HCTRL,<sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a94f9f699dafdfd8ac3f6e93b8e22c4a9" kindref="member">heatr_ctrl</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_array[count]<sp/>=<sp/>reg_addr;<sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_array[count]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Selecting<sp/>heater<sp/>T,P<sp/>oversampling<sp/>for<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/>(<ref refid="group___b_m_e680_1ga7ecfc9ebc2dc3fae358c38215821db6d" kindref="member">BME680_OST_SEL</ref><sp/>|<sp/><ref refid="group___b_m_e680_1gac414417f6a2c0d9b7373c24c41edd804" kindref="member">BME680_OSP_SEL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>boundary_check(&amp;dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1a83ac2b084c3e4162a70482ddf3f73a13" kindref="member">os_temp</ref>,<sp/><ref refid="group___b_m_e680_1ga5ba113b3902da4c9baf45da5f32958d0" kindref="member">BME680_OS_NONE</ref>,<sp/><ref refid="group___b_m_e680_1gabba27bfd061689ca82ee9bac3a11f31e" kindref="member">BME680_OS_16X</ref>,<sp/>dev);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_addr<sp/>=<sp/><ref refid="group___b_m_e680_1ga91607f3be92722408129f7dc4d9da94e" kindref="member">BME680_CONF_T_P_MODE_ADDR</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(reg_addr,<sp/>&amp;data,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga7ecfc9ebc2dc3fae358c38215821db6d" kindref="member">BME680_OST_SEL</ref>)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="group___b_m_e680_1gaa2dfae23c0c4a846bde4fdf3780c390e" kindref="member">BME680_SET_BITS</ref>(data,<sp/>BME680_OST,<sp/>dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1a83ac2b084c3e4162a70482ddf3f73a13" kindref="member">os_temp</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1gac414417f6a2c0d9b7373c24c41edd804" kindref="member">BME680_OSP_SEL</ref>)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="group___b_m_e680_1gaa2dfae23c0c4a846bde4fdf3780c390e" kindref="member">BME680_SET_BITS</ref>(data,<sp/>BME680_OSP,<sp/>dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1ad4d1e27669b8d9bbfce53c8eae258b27" kindref="member">os_pres</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_array[count]<sp/>=<sp/>reg_addr;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_array[count]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Selecting<sp/>humidity<sp/>oversampling<sp/>for<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga9671bc43c2a7a81674cf5c9376a48bee" kindref="member">BME680_OSH_SEL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>boundary_check(&amp;dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1aa2b315a5e149e613b69a235f1cd799f4" kindref="member">os_hum</ref>,<sp/><ref refid="group___b_m_e680_1ga5ba113b3902da4c9baf45da5f32958d0" kindref="member">BME680_OS_NONE</ref>,<sp/><ref refid="group___b_m_e680_1gabba27bfd061689ca82ee9bac3a11f31e" kindref="member">BME680_OS_16X</ref>,<sp/>dev);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_addr<sp/>=<sp/><ref refid="group___b_m_e680_1gabaa63e660c9ff9564ca0fd77c7b3b6b9" kindref="member">BME680_CONF_OS_H_ADDR</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(reg_addr,<sp/>&amp;data,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="group___b_m_e680_1ga5e3fed11d9e1cb98d8c05bc5f418d4e8" kindref="member">BME680_SET_BITS_POS_0</ref>(data,<sp/>BME680_OSH,<sp/>dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1aa2b315a5e149e613b69a235f1cd799f4" kindref="member">os_hum</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_array[count]<sp/>=<sp/>reg_addr;<sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_array[count]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Selecting<sp/>the<sp/>runGas<sp/>and<sp/>NB<sp/>conversion<sp/>settings<sp/>for<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/>(<ref refid="group___b_m_e680_1gac15ff8b6a3383b66cc2dee7cc780cb52" kindref="member">BME680_RUN_GAS_SEL</ref><sp/>|<sp/><ref refid="group___b_m_e680_1gabd5465ac39b9882e80dcf8c75ab4d64a" kindref="member">BME680_NBCONV_SEL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>boundary_check(&amp;dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a89128634f22f0c2309ab03346aa2b7ab" kindref="member">run_gas</ref>,<sp/><ref refid="group___b_m_e680_1ga7cdfa822370f97878b251ec8ae437ad8" kindref="member">BME680_RUN_GAS_DISABLE</ref>,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_m_e680_1gaec72fd2001a168dc042f558438d77e1b" kindref="member">BME680_RUN_GAS_ENABLE</ref>,<sp/>dev);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Validate<sp/>boundary<sp/>conditions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>boundary_check(&amp;dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a2c1e0711e31d6c02427784004a8387d8" kindref="member">nb_conv</ref>,<sp/><ref refid="group___b_m_e680_1ga8b0bdbbedd050d35a8bc27e23c9c96c4" kindref="member">BME680_NBCONV_MIN</ref>,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_m_e680_1gad0000459f5d4f89d82d8294199ff74ff" kindref="member">BME680_NBCONV_MAX</ref>,<sp/>dev);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_addr<sp/>=<sp/><ref refid="group___b_m_e680_1ga7ece2b31e421c4eccc359f86b1d9d1e8" kindref="member">BME680_CONF_ODR_RUN_GAS_NBC_ADDR</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(reg_addr,<sp/>&amp;data,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1gac15ff8b6a3383b66cc2dee7cc780cb52" kindref="member">BME680_RUN_GAS_SEL</ref>)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="group___b_m_e680_1gaa2dfae23c0c4a846bde4fdf3780c390e" kindref="member">BME680_SET_BITS</ref>(data,<sp/>BME680_RUN_GAS,<sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a89128634f22f0c2309ab03346aa2b7ab" kindref="member">run_gas</ref>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1gabd5465ac39b9882e80dcf8c75ab4d64a" kindref="member">BME680_NBCONV_SEL</ref>)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="group___b_m_e680_1ga5e3fed11d9e1cb98d8c05bc5f418d4e8" kindref="member">BME680_SET_BITS_POS_0</ref>(data,<sp/>BME680_NBCONV,<sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a2c1e0711e31d6c02427784004a8387d8" kindref="member">nb_conv</ref>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_array[count]<sp/>=<sp/>reg_addr;<sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>configuration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_array[count]<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga5d1bad74f7ac28e75aca9d7de66fd2b4" kindref="member">bme680_set_regs</ref>(reg_array,<sp/>data_array,<sp/>count,<sp/>dev);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>previous<sp/>intended<sp/>power<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a5d7bfe9503c1c86a8a5d245129749b07" kindref="member">power_mode</ref><sp/>=<sp/>intended_power_mode;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="537" refid="group___b_m_e680_1ga7826b058b8eddcf05ccbb117fd9d41b7" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="group___b_m_e680_1ga7826b058b8eddcf05ccbb117fd9d41b7" kindref="member">bme680_get_sensor_settings</ref>(uint16_t<sp/>desired_settings,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="538"><highlight class="normal">{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>starting<sp/>address<sp/>of<sp/>the<sp/>register<sp/>array<sp/>for<sp/>burst<sp/>read*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_addr<sp/>=<sp/><ref refid="group___b_m_e680_1ga995aae4506cba06c735bb2ff37fbca49" kindref="member">BME680_CONF_HEAT_CTRL_ADDR</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data_array[<ref refid="group___b_m_e680_1ga8bbf94a63af9425d361db02bf8855ba7" kindref="member">BME680_REG_BUFFER_LENGTH</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(reg_addr,<sp/>data_array,<sp/><ref refid="group___b_m_e680_1ga8bbf94a63af9425d361db02bf8855ba7" kindref="member">BME680_REG_BUFFER_LENGTH</ref>,<sp/>dev);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga6ba77fc5b103421f67a9e328720af15e" kindref="member">BME680_GAS_MEAS_SEL</ref>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>get_gas_config(dev);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>T,P,H<sp/>,Filter,ODR<sp/>settings<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga56ea9531725679aaad25b574ac3ab0ce" kindref="member">BME680_FILTER_SEL</ref>)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1aa69d890d38e8a1abafc8697d1760bb04" kindref="member">filter</ref><sp/>=<sp/><ref refid="group___b_m_e680_1ga08f4b60cad6cc750b3fe2a0f4377c192" kindref="member">BME680_GET_BITS</ref>(data_array[<ref refid="group___b_m_e680_1gabead566b839b70723d7dc5be6eb65c12" kindref="member">BME680_REG_FILTER_INDEX</ref>],</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BME680_FILTER);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/>(<ref refid="group___b_m_e680_1ga7ecfc9ebc2dc3fae358c38215821db6d" kindref="member">BME680_OST_SEL</ref><sp/>|<sp/><ref refid="group___b_m_e680_1gac414417f6a2c0d9b7373c24c41edd804" kindref="member">BME680_OSP_SEL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1a83ac2b084c3e4162a70482ddf3f73a13" kindref="member">os_temp</ref><sp/>=<sp/><ref refid="group___b_m_e680_1ga08f4b60cad6cc750b3fe2a0f4377c192" kindref="member">BME680_GET_BITS</ref>(data_array[<ref refid="group___b_m_e680_1gaec07f7b368b29f7418ca1bc8f207b9aa" kindref="member">BME680_REG_TEMP_INDEX</ref>],<sp/>BME680_OST);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1ad4d1e27669b8d9bbfce53c8eae258b27" kindref="member">os_pres</ref><sp/>=<sp/><ref refid="group___b_m_e680_1ga08f4b60cad6cc750b3fe2a0f4377c192" kindref="member">BME680_GET_BITS</ref>(data_array[<ref refid="group___b_m_e680_1gafdc7f2bb002c413323008b44ddcdefdb" kindref="member">BME680_REG_PRES_INDEX</ref>],<sp/>BME680_OSP);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga9671bc43c2a7a81674cf5c9376a48bee" kindref="member">BME680_OSH_SEL</ref>)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1aa2b315a5e149e613b69a235f1cd799f4" kindref="member">os_hum</ref><sp/>=<sp/><ref refid="group___b_m_e680_1gaf514daef101aff8022022eb6c9200b08" kindref="member">BME680_GET_BITS_POS_0</ref>(data_array[<ref refid="group___b_m_e680_1ga50d6c94b5ec0b48f6add5158c8341706" kindref="member">BME680_REG_HUM_INDEX</ref>],</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BME680_OSH);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>gas<sp/>related<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga3db4f67603ca3b538ab71a49d3b08c34" kindref="member">BME680_HCNTRL_SEL</ref>)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a94f9f699dafdfd8ac3f6e93b8e22c4a9" kindref="member">heatr_ctrl</ref><sp/>=<sp/><ref refid="group___b_m_e680_1gaf514daef101aff8022022eb6c9200b08" kindref="member">BME680_GET_BITS_POS_0</ref>(data_array[<ref refid="group___b_m_e680_1ga68e59b1432c8845d9fb41f8c7fb05d85" kindref="member">BME680_REG_HCTRL_INDEX</ref>],</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BME680_HCTRL);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desired_settings<sp/>&amp;<sp/>(<ref refid="group___b_m_e680_1gac15ff8b6a3383b66cc2dee7cc780cb52" kindref="member">BME680_RUN_GAS_SEL</ref><sp/>|<sp/><ref refid="group___b_m_e680_1gabd5465ac39b9882e80dcf8c75ab4d64a" kindref="member">BME680_NBCONV_SEL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a2c1e0711e31d6c02427784004a8387d8" kindref="member">nb_conv</ref><sp/>=<sp/><ref refid="group___b_m_e680_1gaf514daef101aff8022022eb6c9200b08" kindref="member">BME680_GET_BITS_POS_0</ref>(data_array[<ref refid="group___b_m_e680_1ga4b42bf56b98dbdde2ce46ea4a77c4c61" kindref="member">BME680_REG_NBCONV_INDEX</ref>],</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BME680_NBCONV);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a89128634f22f0c2309ab03346aa2b7ab" kindref="member">run_gas</ref><sp/>=<sp/><ref refid="group___b_m_e680_1ga08f4b60cad6cc750b3fe2a0f4377c192" kindref="member">BME680_GET_BITS</ref>(data_array[<ref refid="group___b_m_e680_1ga358279697df80441622801132433cf87" kindref="member">BME680_REG_RUN_GAS_INDEX</ref>],</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BME680_RUN_GAS);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gad11881e59c1b265c9c86abf970637819" kindref="member">BME680_E_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="group___b_m_e680_1ga5ca765226e758e71c862553c7cc0b371" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="group___b_m_e680_1ga5ca765226e758e71c862553c7cc0b371" kindref="member">bme680_set_sensor_mode</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tmp_pow_mode;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>pow_mode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_addr<sp/>=<sp/><ref refid="group___b_m_e680_1ga91607f3be92722408129f7dc4d9da94e" kindref="member">BME680_CONF_T_P_MODE_ADDR</ref>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Call<sp/>repeatedly<sp/>until<sp/>in<sp/>sleep<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(<ref refid="group___b_m_e680_1ga91607f3be92722408129f7dc4d9da94e" kindref="member">BME680_CONF_T_P_MODE_ADDR</ref>,<sp/>&amp;tmp_pow_mode,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Put<sp/>to<sp/>sleep<sp/>before<sp/>changing<sp/>mode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow_mode<sp/>=<sp/>(tmp_pow_mode<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga2f5287272867bdab94595b90e303488e" kindref="member">BME680_MODE_MSK</ref>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pow_mode<sp/>!=<sp/><ref refid="group___b_m_e680_1ga9fc5e8034aa79028c0286ea4c974ee69" kindref="member">BME680_SLEEP_MODE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_pow_mode<sp/>=<sp/>tmp_pow_mode<sp/>&amp;<sp/>(~<ref refid="group___b_m_e680_1ga2f5287272867bdab94595b90e303488e" kindref="member">BME680_MODE_MSK</ref>);<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>to<sp/>sleep<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga5d1bad74f7ac28e75aca9d7de66fd2b4" kindref="member">bme680_set_regs</ref>(&amp;reg_addr,<sp/>&amp;tmp_pow_mode,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1acfd9f63e6ac639204678889c004d9a27" kindref="member">delay_ms</ref>(<ref refid="group___b_m_e680_1ga7545f57cf8b21f71292f4d2998049ab0" kindref="member">BME680_POLL_PERIOD_MS</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pow_mode<sp/>!=<sp/><ref refid="group___b_m_e680_1ga9fc5e8034aa79028c0286ea4c974ee69" kindref="member">BME680_SLEEP_MODE</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Already<sp/>in<sp/>sleep<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a5d7bfe9503c1c86a8a5d245129749b07" kindref="member">power_mode</ref><sp/>!=<sp/><ref refid="group___b_m_e680_1ga9fc5e8034aa79028c0286ea4c974ee69" kindref="member">BME680_SLEEP_MODE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_pow_mode<sp/>=<sp/>(tmp_pow_mode<sp/>&amp;<sp/>~<ref refid="group___b_m_e680_1ga2f5287272867bdab94595b90e303488e" kindref="member">BME680_MODE_MSK</ref>)<sp/>|<sp/>(dev-&gt;<ref refid="structbme680__dev_1a5d7bfe9503c1c86a8a5d245129749b07" kindref="member">power_mode</ref><sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga2f5287272867bdab94595b90e303488e" kindref="member">BME680_MODE_MSK</ref>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga5d1bad74f7ac28e75aca9d7de66fd2b4" kindref="member">bme680_set_regs</ref>(&amp;reg_addr,<sp/>&amp;tmp_pow_mode,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="group___b_m_e680_1ga4e50492a1f4747868f7e9a826492f1e7" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="group___b_m_e680_1ga4e50492a1f4747868f7e9a826492f1e7" kindref="member">bme680_get_sensor_mode</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>mode;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(<ref refid="group___b_m_e680_1ga91607f3be92722408129f7dc4d9da94e" kindref="member">BME680_CONF_T_P_MODE_ADDR</ref>,<sp/>&amp;mode,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Masking<sp/>the<sp/>other<sp/>register<sp/>bit<sp/>info*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a5d7bfe9503c1c86a8a5d245129749b07" kindref="member">power_mode</ref><sp/>=<sp/>mode<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga2f5287272867bdab94595b90e303488e" kindref="member">BME680_MODE_MSK</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="group___b_m_e680_1ga192f772bc9cb619e5855e93d6ebd6128" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_m_e680_1ga192f772bc9cb619e5855e93d6ebd6128" kindref="member">bme680_set_profile_dur</ref>(uint16_t<sp/>duration,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tph_dur;<sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>in<sp/>us<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>meas_cycles;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>os_to_meas_cycles[6]<sp/>=<sp/>{0,<sp/>1,<sp/>2,<sp/>4,<sp/>8,<sp/>16};</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>meas_cycles<sp/>=<sp/>os_to_meas_cycles[dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1a83ac2b084c3e4162a70482ddf3f73a13" kindref="member">os_temp</ref>];</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>meas_cycles<sp/>+=<sp/>os_to_meas_cycles[dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1ad4d1e27669b8d9bbfce53c8eae258b27" kindref="member">os_pres</ref>];</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>meas_cycles<sp/>+=<sp/>os_to_meas_cycles[dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1aa2b315a5e149e613b69a235f1cd799f4" kindref="member">os_hum</ref>];</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TPH<sp/>measurement<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>=<sp/>meas_cycles<sp/>*<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(1963);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>+=<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(477<sp/>*<sp/>4);<sp/></highlight><highlight class="comment">/*<sp/>TPH<sp/>switching<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>+=<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(477<sp/>*<sp/>5);<sp/></highlight><highlight class="comment">/*<sp/>Gas<sp/>measurement<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>+=<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(500);<sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>it<sp/>to<sp/>the<sp/>closest<sp/>whole<sp/>number.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>/=<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(1000);<sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>to<sp/>ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>+=<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(1);<sp/></highlight><highlight class="comment">/*<sp/>Wake<sp/>up<sp/>duration<sp/>of<sp/>1ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>remaining<sp/>time<sp/>should<sp/>be<sp/>used<sp/>for<sp/>heating<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1ab412f4a6feca7ae5340dafc536763cb3" kindref="member">heatr_dur</ref><sp/>=<sp/>duration<sp/>-<sp/>(uint16_t)<sp/>tph_dur;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="group___b_m_e680_1gae49a6f126c136fb16a8557a67e39d07c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_m_e680_1gae49a6f126c136fb16a8557a67e39d07c" kindref="member">bme680_get_profile_dur</ref>(uint16_t<sp/>*duration,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>tph_dur;<sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>in<sp/>us<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>meas_cycles;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>os_to_meas_cycles[6]<sp/>=<sp/>{0,<sp/>1,<sp/>2,<sp/>4,<sp/>8,<sp/>16};</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>meas_cycles<sp/>=<sp/>os_to_meas_cycles[dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1a83ac2b084c3e4162a70482ddf3f73a13" kindref="member">os_temp</ref>];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>meas_cycles<sp/>+=<sp/>os_to_meas_cycles[dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1ad4d1e27669b8d9bbfce53c8eae258b27" kindref="member">os_pres</ref>];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>meas_cycles<sp/>+=<sp/>os_to_meas_cycles[dev-&gt;<ref refid="structbme680__dev_1a838270a634e397d99b838192bf0f2664" kindref="member">tph_sett</ref>.<ref refid="structbme680__tph__sett_1aa2b315a5e149e613b69a235f1cd799f4" kindref="member">os_hum</ref>];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TPH<sp/>measurement<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>=<sp/>meas_cycles<sp/>*<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(1963);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>+=<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(477<sp/>*<sp/>4);<sp/></highlight><highlight class="comment">/*<sp/>TPH<sp/>switching<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>+=<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(477<sp/>*<sp/>5);<sp/></highlight><highlight class="comment">/*<sp/>Gas<sp/>measurement<sp/>duration<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>+=<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(500);<sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>it<sp/>to<sp/>the<sp/>closest<sp/>whole<sp/>number.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>/=<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(1000);<sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>to<sp/>ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>tph_dur<sp/>+=<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(1);<sp/></highlight><highlight class="comment">/*<sp/>Wake<sp/>up<sp/>duration<sp/>of<sp/>1ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>*duration<sp/>=<sp/>(uint16_t)<sp/>tph_dur;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>gas<sp/>duration<sp/>only<sp/>when<sp/>the<sp/>run<sp/>gas<sp/>is<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a89128634f22f0c2309ab03346aa2b7ab" kindref="member">run_gas</ref>)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>remaining<sp/>time<sp/>should<sp/>be<sp/>used<sp/>for<sp/>heating<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*duration<sp/>+=<sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1ab412f4a6feca7ae5340dafc536763cb3" kindref="member">heatr_dur</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="group___b_m_e680_1ga1025301e420e1e21911044bebb62f940" refkind="member"><highlight class="normal">int8_t<sp/><ref refid="group___b_m_e680_1ga1025301e420e1e21911044bebb62f940" kindref="member">bme680_get_sensor_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__field__data" kindref="compound">bme680_field_data</ref><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Reading<sp/>the<sp/>sensor<sp/>data<sp/>in<sp/>forced<sp/>mode<sp/>only<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>read_field_data(data,<sp/>dev);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;<ref refid="structbme680__field__data_1ade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group___b_m_e680_1gae5154502bd57ab10d3f51ebeb9c1055d" kindref="member">BME680_NEW_DATA_MSK</ref>)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2b09d4f4cd7b32f9dac243e2e19d6c4e" kindref="member">new_fields</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2b09d4f4cd7b32f9dac243e2e19d6c4e" kindref="member">new_fields</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>get_calib_data(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>coeff_array[<ref refid="group___b_m_e680_1ga4cf6e3574a83160f0adbfcf8cc5e3729" kindref="member">BME680_COEFF_SIZE</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>temp_var<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>Temporary<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(<ref refid="group___b_m_e680_1ga839d12e3afe0332b3383be0e258c472e" kindref="member">BME680_COEFF_ADDR1</ref>,<sp/>coeff_array,<sp/><ref refid="group___b_m_e680_1ga72647a6cd6285a2e959ddebcb620811c" kindref="member">BME680_COEFF_ADDR1_LEN</ref>,<sp/>dev);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Append<sp/>the<sp/>second<sp/>half<sp/>in<sp/>the<sp/>same<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(<ref refid="group___b_m_e680_1gab6ab32c925171f0f64387c2ad3bbdcf0" kindref="member">BME680_COEFF_ADDR2</ref>,<sp/>&amp;coeff_array[<ref refid="group___b_m_e680_1ga72647a6cd6285a2e959ddebcb620811c" kindref="member">BME680_COEFF_ADDR1_LEN</ref>]</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="group___b_m_e680_1gafb1dd0a4ba022afb5b3f20bc4f20c22b" kindref="member">BME680_COEFF_ADDR2_LEN</ref>,<sp/>dev);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Temperature<sp/>related<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a97eb8ef2b026f56a7d6d695131d0c419" kindref="member">par_t1</ref><sp/>=<sp/>(uint16_t)<sp/>(<ref refid="group___b_m_e680_1ga9aac51cc4b47a1f1c9f30c07026840ab" kindref="member">BME680_CONCAT_BYTES</ref>(coeff_array[<ref refid="group___b_m_e680_1ga361d6bd1a04dab7bfe2064060220ea1c" kindref="member">BME680_T1_MSB_REG</ref>],</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff_array[<ref refid="group___b_m_e680_1ga342e1de1c75d3f622e3c4f9b9acf359e" kindref="member">BME680_T1_LSB_REG</ref>]));</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac6256f94edc8be82afb326e36358745c" kindref="member">par_t2</ref><sp/>=<sp/>(int16_t)<sp/>(<ref refid="group___b_m_e680_1ga9aac51cc4b47a1f1c9f30c07026840ab" kindref="member">BME680_CONCAT_BYTES</ref>(coeff_array[<ref refid="group___b_m_e680_1ga24c2ce0d4413d92d029f9ba3439990d2" kindref="member">BME680_T2_MSB_REG</ref>],</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff_array[<ref refid="group___b_m_e680_1gab0bf47738f04f4e67488166d66096752" kindref="member">BME680_T2_LSB_REG</ref>]));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ae6854d49a6838706762ab15b928ccada" kindref="member">par_t3</ref><sp/>=<sp/>(int8_t)<sp/>(coeff_array[<ref refid="group___b_m_e680_1ga9626ce9952f9e2605b6d42674222a25d" kindref="member">BME680_T3_REG</ref>]);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Pressure<sp/>related<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a117968908269cd833ae78dc56c59f778" kindref="member">par_p1</ref><sp/>=<sp/>(uint16_t)<sp/>(<ref refid="group___b_m_e680_1ga9aac51cc4b47a1f1c9f30c07026840ab" kindref="member">BME680_CONCAT_BYTES</ref>(coeff_array[<ref refid="group___b_m_e680_1gaf37fb5c2354427586d25e1a61f0e4f9c" kindref="member">BME680_P1_MSB_REG</ref>],</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff_array[<ref refid="group___b_m_e680_1gac2a68fdb70bafe67bd14d4f29d52a095" kindref="member">BME680_P1_LSB_REG</ref>]));</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a3e78958697167cc73b739398c72433fe" kindref="member">par_p2</ref><sp/>=<sp/>(int16_t)<sp/>(<ref refid="group___b_m_e680_1ga9aac51cc4b47a1f1c9f30c07026840ab" kindref="member">BME680_CONCAT_BYTES</ref>(coeff_array[<ref refid="group___b_m_e680_1ga30391307c0564eaf8d2c872165137d93" kindref="member">BME680_P2_MSB_REG</ref>],</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff_array[<ref refid="group___b_m_e680_1ga2d6ceda8a2ac80c772d6bc548897065b" kindref="member">BME680_P2_LSB_REG</ref>]));</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a3f8392fa8c84cbaa8539b835ffc53a4a" kindref="member">par_p3</ref><sp/>=<sp/>(int8_t)<sp/>coeff_array[<ref refid="group___b_m_e680_1ga1e3d7d668ed3764eeb728bc91e5afdc7" kindref="member">BME680_P3_REG</ref>];</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a0416df27f022b8c8a8517747a7aee33a" kindref="member">par_p4</ref><sp/>=<sp/>(int16_t)<sp/>(<ref refid="group___b_m_e680_1ga9aac51cc4b47a1f1c9f30c07026840ab" kindref="member">BME680_CONCAT_BYTES</ref>(coeff_array[<ref refid="group___b_m_e680_1gad22d0cc1c0d8c652e07af82b4255f214" kindref="member">BME680_P4_MSB_REG</ref>],</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff_array[<ref refid="group___b_m_e680_1gacee13b799f1525c7db130281b8adc0d4" kindref="member">BME680_P4_LSB_REG</ref>]));</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1add809d9dc0f77cf8076c1a55ed928bc7" kindref="member">par_p5</ref><sp/>=<sp/>(int16_t)<sp/>(<ref refid="group___b_m_e680_1ga9aac51cc4b47a1f1c9f30c07026840ab" kindref="member">BME680_CONCAT_BYTES</ref>(coeff_array[<ref refid="group___b_m_e680_1ga1ea70fab294628f5562ca43e40084a16" kindref="member">BME680_P5_MSB_REG</ref>],</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff_array[<ref refid="group___b_m_e680_1ga9bd758c47b79a3f8e7ca4c272b52104d" kindref="member">BME680_P5_LSB_REG</ref>]));</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a10b9eb6bf2b3f8f2f1cade0ee07f8f18" kindref="member">par_p6</ref><sp/>=<sp/>(int8_t)<sp/>(coeff_array[<ref refid="group___b_m_e680_1ga7098e3f040b32e84a85a153fd89f58f0" kindref="member">BME680_P6_REG</ref>]);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ad3c8ef5f4493ca649fa36c804052eae3" kindref="member">par_p7</ref><sp/>=<sp/>(int8_t)<sp/>(coeff_array[<ref refid="group___b_m_e680_1ga2fec08fa03365bd7cecffb255ff42002" kindref="member">BME680_P7_REG</ref>]);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a9727808e1c81b47e53333ca09891076b" kindref="member">par_p8</ref><sp/>=<sp/>(int16_t)<sp/>(<ref refid="group___b_m_e680_1ga9aac51cc4b47a1f1c9f30c07026840ab" kindref="member">BME680_CONCAT_BYTES</ref>(coeff_array[<ref refid="group___b_m_e680_1ga4a10e9d435d2d907151828e446df5577" kindref="member">BME680_P8_MSB_REG</ref>],</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff_array[<ref refid="group___b_m_e680_1ga24e4d129db86ae29b1bcb0bf2928ea0d" kindref="member">BME680_P8_LSB_REG</ref>]));</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ab650e9192f72d2d271b896b5c02cc588" kindref="member">par_p9</ref><sp/>=<sp/>(int16_t)<sp/>(<ref refid="group___b_m_e680_1ga9aac51cc4b47a1f1c9f30c07026840ab" kindref="member">BME680_CONCAT_BYTES</ref>(coeff_array[<ref refid="group___b_m_e680_1ga6be400180d87c87c68b336cce9057151" kindref="member">BME680_P9_MSB_REG</ref>],</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff_array[<ref refid="group___b_m_e680_1gab2980917bffc20371cb49e6bd230f992" kindref="member">BME680_P9_LSB_REG</ref>]));</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a57a098b477defc4c02eef2977c5309d4" kindref="member">par_p10</ref><sp/>=<sp/>(uint8_t)<sp/>(coeff_array[<ref refid="group___b_m_e680_1gad5344209efe095c80b8dbd36b76ce16f" kindref="member">BME680_P10_REG</ref>]);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Humidity<sp/>related<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a24e095d8b94033d670a1b85694ed30f6" kindref="member">par_h1</ref><sp/>=<sp/>(uint16_t)<sp/>(((uint16_t)<sp/>coeff_array[<ref refid="group___b_m_e680_1ga6566f642c3607f1a7d9b2c03b36e9467" kindref="member">BME680_H1_MSB_REG</ref>]<sp/>&lt;&lt;<sp/><ref refid="group___b_m_e680_1gaa9320cbf90a9bb81b912da4bf036e73b" kindref="member">BME680_HUM_REG_SHIFT_VAL</ref>)</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(coeff_array[<ref refid="group___b_m_e680_1gaefd68b5b70bcdcfa4b2685d84ee5e0c9" kindref="member">BME680_H1_LSB_REG</ref>]<sp/>&amp;<sp/><ref refid="group___b_m_e680_1gaa5ee22e8db0d3264c58e15c7d7506640" kindref="member">BME680_BIT_H1_DATA_MSK</ref>));</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a772cd868a4e39b9f494527d1cb35de02" kindref="member">par_h2</ref><sp/>=<sp/>(uint16_t)<sp/>(((uint16_t)<sp/>coeff_array[<ref refid="group___b_m_e680_1ga43a322b565daddb4e92145b88de49413" kindref="member">BME680_H2_MSB_REG</ref>]<sp/>&lt;&lt;<sp/><ref refid="group___b_m_e680_1gaa9320cbf90a9bb81b912da4bf036e73b" kindref="member">BME680_HUM_REG_SHIFT_VAL</ref>)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((coeff_array[<ref refid="group___b_m_e680_1gae9104a7a0fd5ee4ca48b923d9cf456ea" kindref="member">BME680_H2_LSB_REG</ref>])<sp/>&gt;&gt;<sp/><ref refid="group___b_m_e680_1gaa9320cbf90a9bb81b912da4bf036e73b" kindref="member">BME680_HUM_REG_SHIFT_VAL</ref>));</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a2293002a3dae79a94bdb4e38ec1227f3" kindref="member">par_h3</ref><sp/>=<sp/>(int8_t)<sp/>coeff_array[<ref refid="group___b_m_e680_1gab3f37863a4c1400f28048753406135c3" kindref="member">BME680_H3_REG</ref>];</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a301faa3278cf28d50d64af944079a460" kindref="member">par_h4</ref><sp/>=<sp/>(int8_t)<sp/>coeff_array[<ref refid="group___b_m_e680_1gacaca0b68c4422223d4a360d7d7a2febd" kindref="member">BME680_H4_REG</ref>];</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a0bc2a31e5e092c869b552cdac0385b75" kindref="member">par_h5</ref><sp/>=<sp/>(int8_t)<sp/>coeff_array[<ref refid="group___b_m_e680_1gadc37e78fdc42f7de7ae972bdc2cd316c" kindref="member">BME680_H5_REG</ref>];</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1af5a80c7a7499ee563a7941c9eb4d94b5" kindref="member">par_h6</ref><sp/>=<sp/>(uint8_t)<sp/>coeff_array[<ref refid="group___b_m_e680_1ga12349ac4ac73dcd6a85ae50cdb864be9" kindref="member">BME680_H6_REG</ref>];</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a6e7f2d3730bb568a913e343d36362884" kindref="member">par_h7</ref><sp/>=<sp/>(int8_t)<sp/>coeff_array[<ref refid="group___b_m_e680_1ga66ec7d773394e5de70e6415b8b0afa64" kindref="member">BME680_H7_REG</ref>];</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gas<sp/>heater<sp/>related<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a290accdada6111f113c634c4044c4fa4" kindref="member">par_gh1</ref><sp/>=<sp/>(int8_t)<sp/>coeff_array[<ref refid="group___b_m_e680_1ga78a6ccd6bde3995006c26b0b54320cbd" kindref="member">BME680_GH1_REG</ref>];</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a5b78ce6d7c240043e18580ed4099aab4" kindref="member">par_gh2</ref><sp/>=<sp/>(int16_t)<sp/>(<ref refid="group___b_m_e680_1ga9aac51cc4b47a1f1c9f30c07026840ab" kindref="member">BME680_CONCAT_BYTES</ref>(coeff_array[<ref refid="group___b_m_e680_1ga880b1b5a90f3849fd159fea0fc33e825" kindref="member">BME680_GH2_MSB_REG</ref>],</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff_array[<ref refid="group___b_m_e680_1gaff954cd6b5f15510c07a15db41f651c6" kindref="member">BME680_GH2_LSB_REG</ref>]));</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a94fb11fa5782588916f5d81b8915ef9b" kindref="member">par_gh3</ref><sp/>=<sp/>(int8_t)<sp/>coeff_array[<ref refid="group___b_m_e680_1ga7181bfa862c457cc5d207be66cd04dba" kindref="member">BME680_GH3_REG</ref>];</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Other<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(<ref refid="group___b_m_e680_1gaf9b953db9521005b67eb5b802806e32c" kindref="member">BME680_ADDR_RES_HEAT_RANGE_ADDR</ref>,<sp/>&amp;temp_var,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a69cc977f1f6fb4ccfb8d69712824a077" kindref="member">res_heat_range</ref><sp/>=<sp/>((temp_var<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga92c7d6e920f86722a20742a2273ce507" kindref="member">BME680_RHRANGE_MSK</ref>)<sp/>/<sp/>16);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(<ref refid="group___b_m_e680_1gaf6a74cbd7c52c150a5d83766e86f3bf1" kindref="member">BME680_ADDR_RES_HEAT_VAL_ADDR</ref>,<sp/>&amp;temp_var,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a91f85f7e4c634baf65262c8a31b7ba2b" kindref="member">res_heat_val</ref><sp/>=<sp/>(int8_t)<sp/>temp_var;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(<ref refid="group___b_m_e680_1ga057a5bdc515058c97afc7793b12579f9" kindref="member">BME680_ADDR_RANGE_SW_ERR_ADDR</ref>,<sp/>&amp;temp_var,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1aa4de966258d798da06adeb9442f2b65a" kindref="member">range_sw_err</ref><sp/>=<sp/>((int8_t)<sp/>temp_var<sp/>&amp;<sp/>(int8_t)<sp/><ref refid="group___b_m_e680_1ga9f47f8f5f54e60941b740127a4fd067e" kindref="member">BME680_RSERROR_MSK</ref>)<sp/>/<sp/>16;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>set_gas_config(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_addr[2]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_data[2]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a5d7bfe9503c1c86a8a5d245129749b07" kindref="member">power_mode</ref><sp/>==<sp/><ref refid="group___b_m_e680_1ga1ed7f0fb1ebaf8ec88b28d5f96c19df2" kindref="member">BME680_FORCED_MODE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_addr[0]<sp/>=<sp/><ref refid="group___b_m_e680_1gad1429130a198bff35d0bb98bd1d4cbc1" kindref="member">BME680_RES_HEAT0_ADDR</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_data[0]<sp/>=<sp/>calc_heater_res(dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a8ce6af5d8fce352d043faef7e367a466" kindref="member">heatr_temp</ref>,<sp/>dev);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_addr[1]<sp/>=<sp/><ref refid="group___b_m_e680_1gaf336411b8277b6514284d35e379e6bfa" kindref="member">BME680_GAS_WAIT0_ADDR</ref>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg_data[1]<sp/>=<sp/>calc_heater_dur(dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1ab412f4a6feca7ae5340dafc536763cb3" kindref="member">heatr_dur</ref>);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a2c1e0711e31d6c02427784004a8387d8" kindref="member">nb_conv</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga2ba5b50c969a788bf8c046b48ca9244e" kindref="member">BME680_W_DEFINE_PWR_MODE</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga5d1bad74f7ac28e75aca9d7de66fd2b4" kindref="member">bme680_set_regs</ref>(reg_addr,<sp/>reg_data,<sp/>2,<sp/>dev);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>get_gas_config(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>starting<sp/>address<sp/>of<sp/>the<sp/>register<sp/>array<sp/>for<sp/>burst<sp/>read*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_addr1<sp/>=<sp/><ref refid="group___b_m_e680_1gac938d57e137ed56de68d53aa464f770d" kindref="member">BME680_ADDR_SENS_CONF_START</ref>;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_addr2<sp/>=<sp/><ref refid="group___b_m_e680_1ga2dd74a16a0871aec1986bd46427d1ecb" kindref="member">BME680_ADDR_GAS_CONF_START</ref>;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg_data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___b_m_e680_1gga2232c03d0c1282e976af41b39e1b87d6a504bd691a4b57b0c914cc8c77bd696c3" kindref="member">BME680_SPI_INTF</ref><sp/>==<sp/>dev-&gt;<ref refid="structbme680__dev_1a704c987d019d06ba6641bb769545aae6" kindref="member">intf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Memory<sp/>page<sp/>switch<sp/>the<sp/>SPI<sp/>address*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>set_mem_page(reg_addr1,<sp/>dev);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(reg_addr1,<sp/>&amp;reg_data,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1a8ce6af5d8fce352d043faef7e367a466" kindref="member">heatr_temp</ref><sp/>=<sp/>reg_data;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(reg_addr2,<sp/>&amp;reg_data,<sp/>1,<sp/>dev);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Heating<sp/>duration<sp/>register<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1ac3b142354292c55afff31109e18bc0ee" kindref="member">gas_sett</ref>.<ref refid="structbme680__gas__sett_1ab412f4a6feca7ae5340dafc536763cb3" kindref="member">heatr_dur</ref><sp/>=<sp/>reg_data;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BME680_FLOAT_POINT_COMPENSATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int16_t<sp/>calc_temperature(uint32_t<sp/>temp_adc,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>var1;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>var2;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>var3;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>calc_temp;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>((int32_t)<sp/>temp_adc<sp/>&gt;&gt;<sp/>3)<sp/>-<sp/>((int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a97eb8ef2b026f56a7d6d695131d0c419" kindref="member">par_t1</ref><sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>(var1<sp/>*<sp/>(int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac6256f94edc8be82afb326e36358745c" kindref="member">par_t2</ref>)<sp/>&gt;&gt;<sp/>11;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>var3<sp/>=<sp/>((var1<sp/>&gt;&gt;<sp/>1)<sp/>*<sp/>(var1<sp/>&gt;&gt;<sp/>1))<sp/>&gt;&gt;<sp/>12;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>var3<sp/>=<sp/>((var3)<sp/>*<sp/>((int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ae6854d49a6838706762ab15b928ccada" kindref="member">par_t3</ref><sp/>&lt;&lt;<sp/>4))<sp/>&gt;&gt;<sp/>14;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac1f0d71206317758c70cd96314b6fc02" kindref="member">t_fine</ref><sp/>=<sp/>(int32_t)<sp/>(var2<sp/>+<sp/>var3);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>calc_temp<sp/>=<sp/>(int16_t)<sp/>(((dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac1f0d71206317758c70cd96314b6fc02" kindref="member">t_fine</ref><sp/>*<sp/>5)<sp/>+<sp/>128)<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calc_temp;</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>calc_pressure(uint32_t<sp/>pres_adc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="897"><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var1;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var2;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var3;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>pressure_comp;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac1f0d71206317758c70cd96314b6fc02" kindref="member">t_fine</ref>)<sp/>&gt;&gt;<sp/>1)<sp/>-<sp/>64000;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>((((var1<sp/>&gt;&gt;<sp/>2)<sp/>*<sp/>(var1<sp/>&gt;&gt;<sp/>2))<sp/>&gt;&gt;<sp/>11)<sp/>*</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a10b9eb6bf2b3f8f2f1cade0ee07f8f18" kindref="member">par_p6</ref>)<sp/>&gt;&gt;<sp/>2;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>var2<sp/>+<sp/>((var1<sp/>*<sp/>(int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1add809d9dc0f77cf8076c1a55ed928bc7" kindref="member">par_p5</ref>)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>(var2<sp/>&gt;&gt;<sp/>2)<sp/>+<sp/>((int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a0416df27f022b8c8a8517747a7aee33a" kindref="member">par_p4</ref><sp/>&lt;&lt;<sp/>16);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((((var1<sp/>&gt;&gt;<sp/>2)<sp/>*<sp/>(var1<sp/>&gt;&gt;<sp/>2))<sp/>&gt;&gt;<sp/>13)<sp/>*</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a3f8392fa8c84cbaa8539b835ffc53a4a" kindref="member">par_p3</ref><sp/>&lt;&lt;<sp/>5))<sp/>&gt;&gt;<sp/>3)<sp/>+</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a3e78958697167cc73b739398c72433fe" kindref="member">par_p2</ref><sp/>*<sp/>var1)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>var1<sp/>&gt;&gt;<sp/>18;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>((32768<sp/>+<sp/>var1)<sp/>*<sp/>(int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a117968908269cd833ae78dc56c59f778" kindref="member">par_p1</ref>)<sp/>&gt;&gt;<sp/>15;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>pressure_comp<sp/>=<sp/>1048576<sp/>-<sp/>pres_adc;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>pressure_comp<sp/>=<sp/>(int32_t)((pressure_comp<sp/>-<sp/>(var2<sp/>&gt;&gt;<sp/>12))<sp/>*<sp/>((uint32_t)3125));</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pressure_comp<sp/>&gt;=<sp/><ref refid="group___b_m_e680_1ga0508d0ce67c130119405030ddbe54080" kindref="member">BME680_MAX_OVERFLOW_VAL</ref>)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure_comp<sp/>=<sp/>((pressure_comp<sp/>/<sp/>var1)<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure_comp<sp/>=<sp/>((pressure_comp<sp/>&lt;&lt;<sp/>1)<sp/>/<sp/>var1);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>((int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ab650e9192f72d2d271b896b5c02cc588" kindref="member">par_p9</ref><sp/>*<sp/>(int32_t)(((pressure_comp<sp/>&gt;&gt;<sp/>3)<sp/>*</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(pressure_comp<sp/>&gt;&gt;<sp/>3))<sp/>&gt;&gt;<sp/>13))<sp/>&gt;&gt;<sp/>12;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>((int32_t)(pressure_comp<sp/>&gt;&gt;<sp/>2)<sp/>*</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a9727808e1c81b47e53333ca09891076b" kindref="member">par_p8</ref>)<sp/>&gt;&gt;<sp/>13;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>var3<sp/>=<sp/>((int32_t)(pressure_comp<sp/>&gt;&gt;<sp/>8)<sp/>*<sp/>(int32_t)(pressure_comp<sp/>&gt;&gt;<sp/>8)<sp/>*</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32_t)(pressure_comp<sp/>&gt;&gt;<sp/>8)<sp/>*</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a57a098b477defc4c02eef2977c5309d4" kindref="member">par_p10</ref>)<sp/>&gt;&gt;<sp/>17;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>pressure_comp<sp/>=<sp/>(int32_t)(pressure_comp)<sp/>+<sp/>((var1<sp/>+<sp/>var2<sp/>+<sp/>var3<sp/>+</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int32_t)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ad3c8ef5f4493ca649fa36c804052eae3" kindref="member">par_p7</ref><sp/>&lt;&lt;<sp/>7))<sp/>&gt;&gt;<sp/>4);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)pressure_comp;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>calc_humidity(uint16_t<sp/>hum_adc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var1;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var2;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var3;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var4;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var5;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var6;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>temp_scaled;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>calc_hum;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_scaled<sp/>=<sp/>(((int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac1f0d71206317758c70cd96314b6fc02" kindref="member">t_fine</ref><sp/>*<sp/>5)<sp/>+<sp/>128)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(int32_t)<sp/>(hum_adc<sp/>-<sp/>((int32_t)<sp/>((int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a24e095d8b94033d670a1b85694ed30f6" kindref="member">par_h1</ref><sp/>*<sp/>16)))</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(((temp_scaled<sp/>*<sp/>(int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a2293002a3dae79a94bdb4e38ec1227f3" kindref="member">par_h3</ref>)<sp/>/<sp/>((int32_t)<sp/>100))<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>((int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a772cd868a4e39b9f494527d1cb35de02" kindref="member">par_h2</ref></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(((temp_scaled<sp/>*<sp/>(int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a301faa3278cf28d50d64af944079a460" kindref="member">par_h4</ref>)<sp/>/<sp/>((int32_t)<sp/>100))</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(((temp_scaled<sp/>*<sp/>((temp_scaled<sp/>*<sp/>(int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a0bc2a31e5e092c869b552cdac0385b75" kindref="member">par_h5</ref>)<sp/>/<sp/>((int32_t)<sp/>100)))<sp/>&gt;&gt;<sp/>6)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>/<sp/>((int32_t)<sp/>100))<sp/>+<sp/>(int32_t)<sp/>(1<sp/>&lt;&lt;<sp/>14)))<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>var3<sp/>=<sp/>var1<sp/>*<sp/>var2;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>var4<sp/>=<sp/>(int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1af5a80c7a7499ee563a7941c9eb4d94b5" kindref="member">par_h6</ref><sp/>&lt;&lt;<sp/>7;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>var4<sp/>=<sp/>((var4)<sp/>+<sp/>((temp_scaled<sp/>*<sp/>(int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a6e7f2d3730bb568a913e343d36362884" kindref="member">par_h7</ref>)<sp/>/<sp/>((int32_t)<sp/>100)))<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>var5<sp/>=<sp/>((var3<sp/>&gt;&gt;<sp/>14)<sp/>*<sp/>(var3<sp/>&gt;&gt;<sp/>14))<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>var6<sp/>=<sp/>(var4<sp/>*<sp/>var5)<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>calc_hum<sp/>=<sp/>(((var3<sp/>+<sp/>var6)<sp/>&gt;&gt;<sp/>10)<sp/>*<sp/>((int32_t)<sp/>1000))<sp/>&gt;&gt;<sp/>12;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_hum<sp/>&gt;<sp/>100000)<sp/></highlight><highlight class="comment">/*<sp/>Cap<sp/>at<sp/>100%rH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_hum<sp/>=<sp/>100000;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_hum<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_hum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint32_t)<sp/>calc_hum;</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/>calc_gas_resistance(uint16_t<sp/>gas_res_adc,<sp/>uint8_t<sp/>gas_range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>var1;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>var2;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>var3;</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>calc_gas_res;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>lookupTable1[16]<sp/>=<sp/>{<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647),</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2126008810),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2130303777),</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2143188679),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2136746228),</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2126008810),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2147483647)<sp/>};</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>lookupTable2[16]<sp/>=<sp/>{<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(4096000000),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2048000000),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(1024000000),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(512000000),</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(255744255),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(127110228),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(64000000),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(32258064),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(16016016),</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(8000000),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(4000000),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(2000000),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(1000000),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(500000),</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(250000),<sp/><ref refid="group___b_m_e680_1ga2451a7ede7ebd810357f1503e9898ea6" kindref="member">UINT32_C</ref>(125000)<sp/>};</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(int64_t)<sp/>((1340<sp/>+<sp/>(5<sp/>*<sp/>(int64_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1aa4de966258d798da06adeb9442f2b65a" kindref="member">range_sw_err</ref>))<sp/>*</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((int64_t)<sp/>lookupTable1[gas_range]))<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>(((int64_t)<sp/>((int64_t)<sp/>gas_res_adc<sp/>&lt;&lt;<sp/>15)<sp/>-<sp/>(int64_t)<sp/>(16777216))<sp/>+<sp/>var1);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>var3<sp/>=<sp/>(((int64_t)<sp/>lookupTable2[gas_range]<sp/>*<sp/>(int64_t)<sp/>var1)<sp/>&gt;&gt;<sp/>9);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>calc_gas_res<sp/>=<sp/>(uint32_t)<sp/>((var3<sp/>+<sp/>((int64_t)<sp/>var2<sp/>&gt;&gt;<sp/>1))<sp/>/<sp/>(int64_t)<sp/>var2);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calc_gas_res;</highlight></codeline>
<codeline lineno="997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>calc_heater_res(uint16_t<sp/>temp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>heatr_res;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var1;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var2;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var3;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var4;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>var5;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>heatr_res_x100;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&gt;<sp/>400)<sp/></highlight><highlight class="comment">/*<sp/>Cap<sp/>temperature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>400;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((int32_t)<sp/>dev-&gt;<ref refid="structbme680__dev_1a6d4444052a032e932b7e300415ba284c" kindref="member">amb_temp</ref><sp/>*<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a94fb11fa5782588916f5d81b8915ef9b" kindref="member">par_gh3</ref>)<sp/>/<sp/>1000)<sp/>*<sp/>256;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>(dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a290accdada6111f113c634c4044c4fa4" kindref="member">par_gh1</ref><sp/>+<sp/>784)<sp/>*<sp/>(((((dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a5b78ce6d7c240043e18580ed4099aab4" kindref="member">par_gh2</ref><sp/>+<sp/>154009)<sp/>*<sp/>temp<sp/>*<sp/>5)<sp/>/<sp/>100)<sp/>+<sp/>3276800)<sp/>/<sp/>10);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>var3<sp/>=<sp/>var1<sp/>+<sp/>(var2<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>var4<sp/>=<sp/>(var3<sp/>/<sp/>(dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a69cc977f1f6fb4ccfb8d69712824a077" kindref="member">res_heat_range</ref><sp/>+<sp/>4));</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>var5<sp/>=<sp/>(131<sp/>*<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a91f85f7e4c634baf65262c8a31b7ba2b" kindref="member">res_heat_val</ref>)<sp/>+<sp/>65536;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>heatr_res_x100<sp/>=<sp/>(int32_t)<sp/>(((var4<sp/>/<sp/>var5)<sp/>-<sp/>250)<sp/>*<sp/>34);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>heatr_res<sp/>=<sp/>(uint8_t)<sp/>((heatr_res_x100<sp/>+<sp/>50)<sp/>/<sp/>100);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>heatr_res;</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_temperature(uint32_t<sp/>temp_adc,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1034"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_temp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>var1<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/><sp/>=<sp/>((((float)temp_adc<sp/>/<sp/>16384.0f)<sp/>-<sp/>((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a97eb8ef2b026f56a7d6d695131d0c419" kindref="member">par_t1</ref><sp/>/<sp/>1024.0f))</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac6256f94edc8be82afb326e36358745c" kindref="member">par_t2</ref>));</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>var2<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/><sp/>=<sp/>(((((float)temp_adc<sp/>/<sp/>131072.0f)<sp/>-<sp/>((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a97eb8ef2b026f56a7d6d695131d0c419" kindref="member">par_t1</ref><sp/>/<sp/>8192.0f))<sp/>*</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)temp_adc<sp/>/<sp/>131072.0f)<sp/>-<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a97eb8ef2b026f56a7d6d695131d0c419" kindref="member">par_t1</ref><sp/>/<sp/>8192.0f)))<sp/>*</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ae6854d49a6838706762ab15b928ccada" kindref="member">par_t3</ref><sp/>*<sp/>16.0f));</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>t_fine<sp/>value*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac1f0d71206317758c70cd96314b6fc02" kindref="member">t_fine</ref><sp/>=<sp/>(var1<sp/>+<sp/>var2);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compensated<sp/>temperature<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>calc_temp<sp/><sp/>=<sp/>((dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac1f0d71206317758c70cd96314b6fc02" kindref="member">t_fine</ref>)<sp/>/<sp/>5120.0f);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calc_temp;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_pressure(uint32_t<sp/>pres_adc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_pres<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac1f0d71206317758c70cd96314b6fc02" kindref="member">t_fine</ref><sp/>/<sp/>2.0f)<sp/>-<sp/>64000.0f);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>var1<sp/>*<sp/>var1<sp/>*<sp/>(((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a10b9eb6bf2b3f8f2f1cade0ee07f8f18" kindref="member">par_p6</ref>)<sp/>/<sp/>(131072.0f));</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>var2<sp/>+<sp/>(var1<sp/>*<sp/>((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1add809d9dc0f77cf8076c1a55ed928bc7" kindref="member">par_p5</ref>)<sp/>*<sp/>2.0f);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>(var2<sp/>/<sp/>4.0f)<sp/>+<sp/>(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a0416df27f022b8c8a8517747a7aee33a" kindref="member">par_p4</ref>)<sp/>*<sp/>65536.0f);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a3f8392fa8c84cbaa8539b835ffc53a4a" kindref="member">par_p3</ref><sp/>*<sp/>var1<sp/>*<sp/>var1)<sp/>/<sp/>16384.0f)</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a3e78958697167cc73b739398c72433fe" kindref="member">par_p2</ref><sp/>*<sp/>var1))<sp/>/<sp/>524288.0f);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>((1.0f<sp/>+<sp/>(var1<sp/>/<sp/>32768.0f))<sp/>*<sp/>((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a117968908269cd833ae78dc56c59f778" kindref="member">par_p1</ref>));</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>calc_pres<sp/>=<sp/>(1048576.0f<sp/>-<sp/>((float)pres_adc));</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Avoid<sp/>exception<sp/>caused<sp/>by<sp/>division<sp/>by<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)var1<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_pres<sp/>=<sp/>(((calc_pres<sp/>-<sp/>(var2<sp/>/<sp/>4096.0f))<sp/>*<sp/>6250.0f)<sp/>/<sp/>var1);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ab650e9192f72d2d271b896b5c02cc588" kindref="member">par_p9</ref>)<sp/>*<sp/>calc_pres<sp/>*<sp/>calc_pres)<sp/>/<sp/>2147483648.0f;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>calc_pres<sp/>*<sp/>(((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a9727808e1c81b47e53333ca09891076b" kindref="member">par_p8</ref>)<sp/>/<sp/>32768.0f);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var3<sp/>=<sp/>((calc_pres<sp/>/<sp/>256.0f)<sp/>*<sp/>(calc_pres<sp/>/<sp/>256.0f)<sp/>*<sp/>(calc_pres<sp/>/<sp/>256.0f)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>(dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a57a098b477defc4c02eef2977c5309d4" kindref="member">par_p10</ref><sp/>/<sp/>131072.0f));</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_pres<sp/>=<sp/>(calc_pres<sp/>+<sp/>(var1<sp/>+<sp/>var2<sp/>+<sp/>var3<sp/>+<sp/>((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ad3c8ef5f4493ca649fa36c804052eae3" kindref="member">par_p7</ref><sp/>*<sp/>128.0f))<sp/>/<sp/>16.0f);</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_pres<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calc_pres;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_humidity(uint16_t<sp/>hum_adc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_hum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temp_comp;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compensated<sp/>temperature<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_comp<sp/><sp/>=<sp/>((dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1ac1f0d71206317758c70cd96314b6fc02" kindref="member">t_fine</ref>)<sp/>/<sp/>5120.0f);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(float)((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)hum_adc)<sp/>-<sp/>(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a24e095d8b94033d670a1b85694ed30f6" kindref="member">par_h1</ref><sp/>*<sp/>16.0f)<sp/>+<sp/>(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a2293002a3dae79a94bdb4e38ec1227f3" kindref="member">par_h3</ref><sp/>/<sp/>2.0f)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>temp_comp));</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>var1<sp/>*<sp/>((float)(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a772cd868a4e39b9f494527d1cb35de02" kindref="member">par_h2</ref><sp/>/<sp/>262144.0f)<sp/>*<sp/>(1.0f<sp/>+<sp/>(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a301faa3278cf28d50d64af944079a460" kindref="member">par_h4</ref><sp/>/<sp/>16384.0f)</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>temp_comp)<sp/>+<sp/>(((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a0bc2a31e5e092c869b552cdac0385b75" kindref="member">par_h5</ref><sp/>/<sp/>1048576.0f)<sp/>*<sp/>temp_comp<sp/>*<sp/>temp_comp))));</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>var3<sp/>=<sp/>(float)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1af5a80c7a7499ee563a7941c9eb4d94b5" kindref="member">par_h6</ref><sp/>/<sp/>16384.0f;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/>var4<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a6e7f2d3730bb568a913e343d36362884" kindref="member">par_h7</ref><sp/>/<sp/>2097152.0f;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>calc_hum<sp/>=<sp/>var2<sp/>+<sp/>((var3<sp/>+<sp/>(var4<sp/>*<sp/>temp_comp))<sp/>*<sp/>var2<sp/>*<sp/>var2);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_hum<sp/>&gt;<sp/>100.0f)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_hum<sp/>=<sp/>100.0f;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(calc_hum<sp/>&lt;<sp/>0.0f)</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calc_hum<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calc_hum;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_gas_resistance(uint16_t<sp/>gas_res_adc,<sp/>uint8_t<sp/>gas_range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_gas_res;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lookup_k1_range[16]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>-1.0,<sp/>0.0,<sp/>-0.8,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/>-0.2,<sp/>-0.5,<sp/>0.0,<sp/>-1.0,<sp/>0.0,<sp/>0.0};</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lookup_k2_range[16]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.1,<sp/>0.7,<sp/>0.0,<sp/>-0.8,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>-0.1,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0};</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(1340.0f<sp/>+<sp/>(5.0f<sp/>*<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1aa4de966258d798da06adeb9442f2b65a" kindref="member">range_sw_err</ref>));</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>(var1)<sp/>*<sp/>(1.0f<sp/>+<sp/>lookup_k1_range[gas_range]/100.0f);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>var3<sp/>=<sp/>1.0f<sp/>+<sp/>(lookup_k2_range[gas_range]/100.0f);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>calc_gas_res<sp/>=<sp/>1.0f<sp/>/<sp/>(float)(var3<sp/>*<sp/>(0.000000125f)<sp/>*<sp/>(float)(1<sp/>&lt;&lt;<sp/>gas_range)<sp/>*<sp/>(((((float)gas_res_adc)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>512.0f)/var2)<sp/>+<sp/>1.0f));</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calc_gas_res;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>calc_heater_res(uint16_t<sp/>temp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var3<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var4<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>var5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>res_heat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp<sp/>&gt;<sp/>400)<sp/></highlight><highlight class="comment">/*<sp/>Cap<sp/>temperature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>400;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>var1<sp/>=<sp/>(((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a290accdada6111f113c634c4044c4fa4" kindref="member">par_gh1</ref><sp/>/<sp/>(16.0f))<sp/>+<sp/>49.0f);</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>var2<sp/>=<sp/>((((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a5b78ce6d7c240043e18580ed4099aab4" kindref="member">par_gh2</ref><sp/>/<sp/>(32768.0f))<sp/>*<sp/>(0.0005f))<sp/>+<sp/>0.00235f);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/>var3<sp/>=<sp/>((float)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a94fb11fa5782588916f5d81b8915ef9b" kindref="member">par_gh3</ref><sp/>/<sp/>(1024.0f));</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>var4<sp/>=<sp/>(var1<sp/>*<sp/>(1.0f<sp/>+<sp/>(var2<sp/>*<sp/>(float)temp)));</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>var5<sp/>=<sp/>(var4<sp/>+<sp/>(var3<sp/>*<sp/>(float)dev-&gt;<ref refid="structbme680__dev_1a6d4444052a032e932b7e300415ba284c" kindref="member">amb_temp</ref>));</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>res_heat<sp/>=<sp/>(uint8_t)(3.4f<sp/>*<sp/>((var5<sp/>*<sp/>(4<sp/>/<sp/>(4<sp/>+<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a69cc977f1f6fb4ccfb8d69712824a077" kindref="member">res_heat_range</ref>))<sp/>*</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1/(1<sp/>+<sp/>((float)<sp/>dev-&gt;<ref refid="structbme680__dev_1a2bf9047fe5625c12909c7f3810edac53" kindref="member">calib</ref>.<ref refid="structbme680__calib__data_1a91f85f7e4c634baf65262c8a31b7ba2b" kindref="member">res_heat_val</ref><sp/>*<sp/>0.002f))))<sp/>-<sp/>25));</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res_heat;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>calc_heater_dur(uint16_t<sp/>dur)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>factor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>durval;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dur<sp/>&gt;=<sp/>0xfc0)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>durval<sp/>=<sp/>0xff;<sp/></highlight><highlight class="comment">/*<sp/>Max<sp/>duration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dur<sp/>&gt;<sp/>0x3F)<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dur<sp/>=<sp/>dur<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>durval<sp/>=<sp/>(uint8_t)<sp/>(dur<sp/>+<sp/>(factor<sp/>*<sp/>64));</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>durval;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>read_field_data(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__field__data" kindref="compound">bme680_field_data</ref><sp/>*data,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>buff[<ref refid="group___b_m_e680_1ga7cb775d981358b7e58eb8db0094bd1d7" kindref="member">BME680_FIELD_LENGTH</ref>]<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>gas_range;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>adc_temp;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>adc_pres;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>adc_hum;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>adc_gas_res;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>tries<sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gaf5548cbdbf327e2c77bdb0afb1dde9e4" kindref="member">bme680_get_regs</ref>(((uint8_t)<sp/>(<ref refid="group___b_m_e680_1gaa1126d8a0cab009b3812d4dba28beec3" kindref="member">BME680_FIELD0_ADDR</ref>)),<sp/>buff,<sp/>(uint16_t)<sp/><ref refid="group___b_m_e680_1ga7cb775d981358b7e58eb8db0094bd1d7" kindref="member">BME680_FIELD_LENGTH</ref>,</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__field__data_1ade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>=<sp/>buff[0]<sp/>&amp;<sp/><ref refid="group___b_m_e680_1gae5154502bd57ab10d3f51ebeb9c1055d" kindref="member">BME680_NEW_DATA_MSK</ref>;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__field__data_1ac9861af59182939c5f1d292857cc218c" kindref="member">gas_index</ref><sp/>=<sp/>buff[0]<sp/>&amp;<sp/><ref refid="group___b_m_e680_1gaf008a56a09f0095ee6ec6407de1d8ae4" kindref="member">BME680_GAS_INDEX_MSK</ref>;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__field__data_1aca75285d2e9da8983c3ea6498bd24d49" kindref="member">meas_index</ref><sp/>=<sp/>buff[1];</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>raw<sp/>data<sp/>from<sp/>the<sp/>sensor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_pres<sp/>=<sp/>(uint32_t)<sp/>(((uint32_t)<sp/>buff[2]<sp/>*<sp/>4096)<sp/>|<sp/>((uint32_t)<sp/>buff[3]<sp/>*<sp/>16)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((uint32_t)<sp/>buff[4]<sp/>/<sp/>16));</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_temp<sp/>=<sp/>(uint32_t)<sp/>(((uint32_t)<sp/>buff[5]<sp/>*<sp/>4096)<sp/>|<sp/>((uint32_t)<sp/>buff[6]<sp/>*<sp/>16)</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((uint32_t)<sp/>buff[7]<sp/>/<sp/>16));</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_hum<sp/>=<sp/>(uint16_t)<sp/>(((uint32_t)<sp/>buff[8]<sp/>*<sp/>256)<sp/>|<sp/>(uint32_t)<sp/>buff[9]);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adc_gas_res<sp/>=<sp/>(uint16_t)<sp/>((uint32_t)<sp/>buff[13]<sp/>*<sp/>4<sp/>|<sp/>(((uint32_t)<sp/>buff[14])<sp/>/<sp/>64));</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gas_range<sp/>=<sp/>buff[14]<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga1dac00f71350a4298f1f6ec663e20d2d" kindref="member">BME680_GAS_RANGE_MSK</ref>;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__field__data_1ade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>|=<sp/>buff[14]<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga18969c0772c82f03479f5be7a0c11cd0" kindref="member">BME680_GASM_VALID_MSK</ref>;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__field__data_1ade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>|=<sp/>buff[14]<sp/>&amp;<sp/><ref refid="group___b_m_e680_1gaf08b72120096ba6069878faafd721832" kindref="member">BME680_HEAT_STAB_MSK</ref>;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data-&gt;<ref refid="structbme680__field__data_1ade818037fd6c985038ff29656089758d" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group___b_m_e680_1gae5154502bd57ab10d3f51ebeb9c1055d" kindref="member">BME680_NEW_DATA_MSK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__field__data_1a4af92569ea830250443045233c9bf5fb" kindref="member">temperature</ref><sp/>=<sp/>calc_temperature(adc_temp,<sp/>dev);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__field__data_1a40802f00da9a5333c393554eec7d3912" kindref="member">pressure</ref><sp/>=<sp/>calc_pressure(adc_pres,<sp/>dev);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__field__data_1a50c9fa7d72a92ac100303875e378d55c" kindref="member">humidity</ref><sp/>=<sp/>calc_humidity(adc_hum,<sp/>dev);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="structbme680__field__data_1a61b252fa5c68b4e022049d3881cb32f6" kindref="member">gas_resistance</ref><sp/>=<sp/>calc_gas_resistance(adc_gas_res,<sp/>gas_range,<sp/>dev);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Delay<sp/>to<sp/>poll<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1acfd9f63e6ac639204678889c004d9a27" kindref="member">delay_ms</ref>(<ref refid="group___b_m_e680_1ga7545f57cf8b21f71292f4d2998049ab0" kindref="member">BME680_POLL_PERIOD_MS</ref>);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tries--;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tries);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tries)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga533eca7a4a75913b602b89f8793f71c4" kindref="member">BME680_W_NO_NEW_DATA</ref>;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>set_mem_page(uint8_t<sp/>reg_addr,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>mem_page;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointers<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reg_addr<sp/>&gt;<sp/>0x7f)</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem_page<sp/>=<sp/><ref refid="group___b_m_e680_1ga7f7a072d2cf401f5167a33acde2fd905" kindref="member">BME680_MEM_PAGE1</ref>;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem_page<sp/>=<sp/><ref refid="group___b_m_e680_1ga2af2d059c5cdc5925dc050a5d67f2d0b" kindref="member">BME680_MEM_PAGE0</ref>;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem_page<sp/>!=<sp/>dev-&gt;<ref refid="structbme680__dev_1aa686d4be91dd67b606593a76bb506303" kindref="member">mem_page</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1aa686d4be91dd67b606593a76bb506303" kindref="member">mem_page</ref><sp/>=<sp/>mem_page;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a75f4f26417a14eeb41a677a1c3770a4d" kindref="member">com_rslt</ref><sp/>=<sp/>dev-&gt;<ref refid="structbme680__dev_1aa8215525e98304c1037bef2f1407f8ee" kindref="member">read</ref>(dev-&gt;<ref refid="structbme680__dev_1a360603720ae8b2c0e4931dd0f648c504" kindref="member">dev_id</ref>,<sp/><ref refid="group___b_m_e680_1gaaeb2b1ccd1f00d9c2444a3b30dbbd67d" kindref="member">BME680_MEM_PAGE_ADDR</ref><sp/>|<sp/><ref refid="group___b_m_e680_1ga82221087b2a61c32876783ffaf23ce02" kindref="member">BME680_SPI_RD_MSK</ref>,<sp/>&amp;reg,<sp/>1);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a75f4f26417a14eeb41a677a1c3770a4d" kindref="member">com_rslt</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gafa2490175882e55b410f4c383dd89b81" kindref="member">BME680_E_COM_FAIL</ref>;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg<sp/>=<sp/>reg<sp/>&amp;<sp/>(~<ref refid="group___b_m_e680_1ga7858e5d3b4d39482fc04848a02bcd4cb" kindref="member">BME680_MEM_PAGE_MSK</ref>);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg<sp/>=<sp/>reg<sp/>|<sp/>(dev-&gt;<ref refid="structbme680__dev_1aa686d4be91dd67b606593a76bb506303" kindref="member">mem_page</ref><sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga7858e5d3b4d39482fc04848a02bcd4cb" kindref="member">BME680_MEM_PAGE_MSK</ref>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a75f4f26417a14eeb41a677a1c3770a4d" kindref="member">com_rslt</ref><sp/>=<sp/>dev-&gt;<ref refid="structbme680__dev_1a796d8ab19af12146a56567358ab6089c" kindref="member">write</ref>(dev-&gt;<ref refid="structbme680__dev_1a360603720ae8b2c0e4931dd0f648c504" kindref="member">dev_id</ref>,<sp/><ref refid="group___b_m_e680_1gaaeb2b1ccd1f00d9c2444a3b30dbbd67d" kindref="member">BME680_MEM_PAGE_ADDR</ref><sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga22e8383fee778e9ae7a9e91405438f29" kindref="member">BME680_SPI_WR_MSK</ref>,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;reg,<sp/>1);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a75f4f26417a14eeb41a677a1c3770a4d" kindref="member">com_rslt</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gafa2490175882e55b410f4c383dd89b81" kindref="member">BME680_E_COM_FAIL</ref>;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>get_mem_page(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>reg;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>null<sp/>pointer<sp/>in<sp/>the<sp/>device<sp/>structure*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/>null_ptr_check(dev);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a75f4f26417a14eeb41a677a1c3770a4d" kindref="member">com_rslt</ref><sp/>=<sp/>dev-&gt;<ref refid="structbme680__dev_1aa8215525e98304c1037bef2f1407f8ee" kindref="member">read</ref>(dev-&gt;<ref refid="structbme680__dev_1a360603720ae8b2c0e4931dd0f648c504" kindref="member">dev_id</ref>,<sp/><ref refid="group___b_m_e680_1gaaeb2b1ccd1f00d9c2444a3b30dbbd67d" kindref="member">BME680_MEM_PAGE_ADDR</ref><sp/>|<sp/><ref refid="group___b_m_e680_1ga82221087b2a61c32876783ffaf23ce02" kindref="member">BME680_SPI_RD_MSK</ref>,<sp/>&amp;reg,<sp/>1);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev-&gt;<ref refid="structbme680__dev_1a75f4f26417a14eeb41a677a1c3770a4d" kindref="member">com_rslt</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gafa2490175882e55b410f4c383dd89b81" kindref="member">BME680_E_COM_FAIL</ref>;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1aa686d4be91dd67b606593a76bb506303" kindref="member">mem_page</ref><sp/>=<sp/>reg<sp/>&amp;<sp/><ref refid="group___b_m_e680_1ga7858e5d3b4d39482fc04848a02bcd4cb" kindref="member">BME680_MEM_PAGE_MSK</ref>;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>boundary_check(uint8_t<sp/>*value,<sp/>uint8_t<sp/>min,<sp/>uint8_t<sp/>max,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/><ref refid="group___b_m_e680_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>value<sp/>is<sp/>below<sp/>minimum<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value<sp/>&lt;<sp/>min)<sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Auto<sp/>correct<sp/>the<sp/>invalid<sp/>value<sp/>to<sp/>minimum<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>min;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2ca706ef8f472b1c77a4d308c96fa887" kindref="member">info_msg</ref><sp/>|=<sp/><ref refid="group___b_m_e680_1gae68bbfadb05ed1dd48eec5477abdd094" kindref="member">BME680_I_MIN_CORRECTION</ref>;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>value<sp/>is<sp/>above<sp/>maximum<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*value<sp/>&gt;<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Auto<sp/>correct<sp/>the<sp/>invalid<sp/>value<sp/>to<sp/>maximum<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*value<sp/>=<sp/>max;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev-&gt;<ref refid="structbme680__dev_1a2ca706ef8f472b1c77a4d308c96fa887" kindref="member">info_msg</ref><sp/>|=<sp/><ref refid="group___b_m_e680_1ga7a16c7f1ccf8000a8be2da2f2010eaa4" kindref="member">BME680_I_MAX_CORRECTION</ref>;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gad11881e59c1b265c9c86abf970637819" kindref="member">BME680_E_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/>null_ptr_check(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbme680__dev" kindref="compound">bme680_dev</ref><sp/>*dev)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>int8_t<sp/>rslt;</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dev<sp/>==<sp/><ref refid="group___b_m_e680_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||<sp/>(dev-&gt;<ref refid="structbme680__dev_1aa8215525e98304c1037bef2f1407f8ee" kindref="member">read</ref><sp/>==<sp/><ref refid="group___b_m_e680_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||<sp/>(dev-&gt;<ref refid="structbme680__dev_1a796d8ab19af12146a56567358ab6089c" kindref="member">write</ref><sp/>==<sp/><ref refid="group___b_m_e680_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||<sp/>(dev-&gt;<ref refid="structbme680__dev_1acfd9f63e6ac639204678889c004d9a27" kindref="member">delay_ms</ref><sp/>==<sp/><ref refid="group___b_m_e680_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Device<sp/>structure<sp/>pointer<sp/>is<sp/>not<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1gad11881e59c1b265c9c86abf970637819" kindref="member">BME680_E_NULL_PTR</ref>;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Device<sp/>structure<sp/>is<sp/>fine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group___b_m_e680_1ga2e82e5c447a9dbbeebf95b1ba189effb" kindref="member">BME680_OK</ref>;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="1367"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="//Mac/Home/Desktop/ESE 381/Labs/Lab 10/lab10_task1/lab10_task1/bme680.c"/>
  </compounddef>
</doxygen>
